{
    "pipes": [],
    "interfaces": [
        {
            "name": "DynamicFormControllerInterface",
            "id": "interface-DynamicFormControllerInterface-eba4deab43518ae0c569978eced456bd",
            "file": "projects/ksk/dynamic-form/src/lib/interface/dynamic-form-controller.interface.ts",
            "type": "interface",
            "sourceCode": "import {FORM_CONTROLLER_TYPE} from './form-controller.enum';\r\nimport {COLUMN_SIZE_TYPE} from './column-size.type';\r\nimport {OFFSET_SIZE_TYPE} from './offset-size.type';\r\n\r\nexport interface DynamicFormControllerInterface {\r\n  type: FORM_CONTROLLER_TYPE;\r\n  columnSize: COLUMN_SIZE_TYPE[];\r\n  offsetSize: OFFSET_SIZE_TYPE[];\r\n  label: string;\r\n  name: string;\r\n  placeholder: string;\r\n  defaultValue: any;\r\n  required?: boolean;\r\n  disabled?: boolean;\r\n  hide?: boolean;\r\n  showInGrid?: boolean;\r\n  controllerClass?: string;\r\n  min?: number;\r\n  max?: number;\r\n  pattern?: string;\r\n  requiredError?: string;\r\n  emailError?: string;\r\n  minError?: string;\r\n  maxError?: string;\r\n  patternError?: string;\r\n  duplicateMessage?: string;\r\n  multiple?: boolean;\r\n  dataProvider?: {\r\n    identifyBy: string;\r\n    displayBy: string;\r\n    data: any[];\r\n  };\r\n}\r\n\r\nexport function getDynamicFormController(\r\n  type: FORM_CONTROLLER_TYPE,\r\n  label: string,\r\n  value: any,\r\n  name: string,\r\n  placeholder: string,\r\n  props = {},\r\n  columnSize: COLUMN_SIZE_TYPE[] = ['col-md-4'],\r\n  offsetSize: OFFSET_SIZE_TYPE[] = [],\r\n): DynamicFormControllerInterface {\r\n  return {\r\n    type,\r\n    label,\r\n    defaultValue: value,\r\n    name,\r\n    placeholder,\r\n    columnSize,\r\n    offsetSize,\r\n    ...props\r\n  };\r\n}\r\n\r\n",
            "properties": [
                {
                    "name": "columnSize",
                    "type": "COLUMN_SIZE_TYPE[]",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "controllerClass",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "dataProvider",
                    "type": "literal type",
                    "optional": true,
                    "description": "",
                    "line": 28
                },
                {
                    "name": "defaultValue",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "disabled",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "duplicateMessage",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "emailError",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "hide",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "label",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "max",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "maxError",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "min",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "minError",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "multiple",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 27
                },
                {
                    "name": "name",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "offsetSize",
                    "type": "OFFSET_SIZE_TYPE[]",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "pattern",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "patternError",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "placeholder",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "required",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "requiredError",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "showInGrid",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "type",
                    "type": "FORM_CONTROLLER_TYPE",
                    "optional": false,
                    "description": "",
                    "line": 6
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        }
    ],
    "injectables": [],
    "classes": [],
    "directives": [],
    "components": [
        {
            "name": "AppComponent",
            "id": "component-AppComponent-53f6c55e1d5459df23edc3edcd14373d",
            "file": "projects/integration-testing/src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [
                "./app.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "formControls",
                    "defaultValue": "[\r\n    getDynamicFormController(FORM_CONTROLLER_TYPE.TEXT, 'First Name', 'Vamsee Kalyan', 'firstName', 'Enter First Name', {required: true}),\r\n  ]",
                    "type": "DynamicFormControllerInterface[]",
                    "optional": false,
                    "description": "",
                    "line": 84
                },
                {
                    "name": "showInfo",
                    "defaultValue": "{\r\n    showType: true,\r\n    showHide: false,\r\n    showShowInGrid: true,\r\n    showControllerClass: true,\r\n    showColumnClass: true,\r\n    showLabel: true,\r\n    showValue: true,\r\n    showName: true,\r\n    showDisabled: false,\r\n    showRequired: true,\r\n    showMinlength: true,\r\n    showMaxlength: true,\r\n    showMin: true,\r\n    showMax: true,\r\n    showPattern: true,\r\n    showPlaceholder: true,\r\n    showRequiredError: true,\r\n    showEmailError: true,\r\n    showMinError: true,\r\n    showMaxError: true,\r\n    showMinlengthError: true,\r\n    showMaxlengthError: true,\r\n    showPatternError: true,\r\n    showDuplicateMessage: true,\r\n    showMultiple: true,\r\n    showDataProvider: true,\r\n  }",
                    "type": "object",
                    "optional": false,
                    "description": "",
                    "line": 55
                },
                {
                    "name": "showTabs",
                    "defaultValue": "{\r\n    basicDetails: true,\r\n    requiredValidation: true,\r\n    minMaxValidation: true,\r\n    patternValidation: true,\r\n    emailValidation: true,\r\n    duplicateValidation: true,\r\n    dataProvider: true,\r\n  }",
                    "type": "object",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "value",
                    "defaultValue": "{\r\n    type: '',\r\n    name: '',\r\n    label: '',\r\n    value: '',\r\n    placeholder: '',\r\n    controllerClass: '',\r\n    columnClass: '',\r\n    hide: false,\r\n    showInGrid: true,\r\n    disabled: false,\r\n    multiple: false,\r\n    required: true,\r\n    requiredError: '',\r\n    minlength: '',\r\n    minlengthError: '',\r\n    maxlength: '',\r\n    maxlengthError: '',\r\n    min: '',\r\n    minError: '',\r\n    max: '',\r\n    maxError: '',\r\n    pattern: '',\r\n    patternError: '',\r\n    emailError: '',\r\n    duplicateMessage: '',\r\n    dataProvider: '',\r\n  }",
                    "type": "object",
                    "optional": false,
                    "description": "",
                    "line": 25
                }
            ],
            "methodsClass": [
                {
                    "name": "onTypeChange",
                    "args": [
                        {
                            "name": "type",
                            "type": "FORM_CONTROLLER_TYPE"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 128,
                    "jsdoctags": [
                        {
                            "name": "type",
                            "type": "FORM_CONTROLLER_TYPE",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "resetValidations",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 88
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import {Component} from '@angular/core';\r\nimport {\r\n  getDynamicFormController,\r\n  DynamicFormControllerInterface\r\n} from '../../../ksk/dynamic-form/src/lib/interface/dynamic-form-controller.interface';\r\nimport {FORM_CONTROLLER_TYPE} from '../../../ksk/dynamic-form/src/lib/interface/form-controller.enum';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n\r\n  showTabs = {\r\n    basicDetails: true,\r\n    requiredValidation: true,\r\n    minMaxValidation: true,\r\n    patternValidation: true,\r\n    emailValidation: true,\r\n    duplicateValidation: true,\r\n    dataProvider: true,\r\n  }\r\n\r\n  value = {\r\n    type: '',\r\n    name: '',\r\n    label: '',\r\n    value: '',\r\n    placeholder: '',\r\n    controllerClass: '',\r\n    columnClass: '',\r\n    hide: false,\r\n    showInGrid: true,\r\n    disabled: false,\r\n    multiple: false,\r\n    required: true,\r\n    requiredError: '',\r\n    minlength: '',\r\n    minlengthError: '',\r\n    maxlength: '',\r\n    maxlengthError: '',\r\n    min: '',\r\n    minError: '',\r\n    max: '',\r\n    maxError: '',\r\n    pattern: '',\r\n    patternError: '',\r\n    emailError: '',\r\n    duplicateMessage: '',\r\n    dataProvider: '',\r\n  }\r\n\r\n\r\n  showInfo = {\r\n    showType: true,\r\n    showHide: false,\r\n    showShowInGrid: true,\r\n    showControllerClass: true,\r\n    showColumnClass: true,\r\n    showLabel: true,\r\n    showValue: true,\r\n    showName: true,\r\n    showDisabled: false,\r\n    showRequired: true,\r\n    showMinlength: true,\r\n    showMaxlength: true,\r\n    showMin: true,\r\n    showMax: true,\r\n    showPattern: true,\r\n    showPlaceholder: true,\r\n    showRequiredError: true,\r\n    showEmailError: true,\r\n    showMinError: true,\r\n    showMaxError: true,\r\n    showMinlengthError: true,\r\n    showMaxlengthError: true,\r\n    showPatternError: true,\r\n    showDuplicateMessage: true,\r\n    showMultiple: true,\r\n    showDataProvider: true,\r\n  }\r\n\r\n  formControls: DynamicFormControllerInterface[] = [\r\n    getDynamicFormController(FORM_CONTROLLER_TYPE.TEXT, 'First Name', 'Vamsee Kalyan', 'firstName', 'Enter First Name', {required: true}),\r\n  ];\r\n\r\n  resetValidations() {\r\n    this.showInfo = {\r\n      showType: true,\r\n      showHide: true,\r\n      showShowInGrid: true,\r\n      showControllerClass: true,\r\n      showColumnClass: true,\r\n      showLabel: true,\r\n      showValue: true,\r\n      showName: true,\r\n      showDisabled: true,\r\n      showRequired: true,\r\n      showMinlength: true,\r\n      showMaxlength: true,\r\n      showMin: true,\r\n      showMax: true,\r\n      showPattern: true,\r\n      showPlaceholder: true,\r\n      showRequiredError: true,\r\n      showEmailError: true,\r\n      showMinError: true,\r\n      showMaxError: true,\r\n      showMinlengthError: true,\r\n      showMaxlengthError: true,\r\n      showPatternError: true,\r\n      showDuplicateMessage: true,\r\n      showMultiple: true,\r\n      showDataProvider: true,\r\n    }\r\n    this.showTabs = {\r\n      basicDetails: true,\r\n      requiredValidation: true,\r\n      minMaxValidation: true,\r\n      patternValidation: true,\r\n      emailValidation: true,\r\n      duplicateValidation: true,\r\n      dataProvider: true,\r\n    }\r\n  }\r\n\r\n  onTypeChange(type: FORM_CONTROLLER_TYPE) {\r\n    this.resetValidations();\r\n    switch (type) {\r\n      case FORM_CONTROLLER_TYPE.EMAIL:\r\n        this.showTabs.minMaxValidation = false;\r\n        this.showTabs.patternValidation = false;\r\n        this.showTabs.dataProvider = false;\r\n        break;\r\n      case FORM_CONTROLLER_TYPE.COLOR:\r\n        this.showTabs.minMaxValidation = false;\r\n        this.showTabs.patternValidation = false;\r\n        this.showTabs.emailValidation = false;\r\n        this.showTabs.dataProvider = false;\r\n        break;\r\n      case FORM_CONTROLLER_TYPE.DATE:\r\n        this.showTabs.patternValidation = false;\r\n        this.showTabs.emailValidation = false;\r\n        this.showTabs.dataProvider = false;\r\n        break;\r\n      case FORM_CONTROLLER_TYPE.DATETIME:\r\n        this.showTabs.patternValidation = false;\r\n        this.showTabs.emailValidation = false;\r\n        this.showTabs.dataProvider = false;\r\n        break;\r\n      case FORM_CONTROLLER_TYPE.MONTH:\r\n        this.showTabs.patternValidation = false;\r\n        this.showTabs.emailValidation = false;\r\n        this.showTabs.dataProvider = false;\r\n        break;\r\n      case FORM_CONTROLLER_TYPE.NUMBER:\r\n        this.showTabs.patternValidation = false;\r\n        this.showTabs.emailValidation = false;\r\n        this.showTabs.dataProvider = false;\r\n        break;\r\n      case FORM_CONTROLLER_TYPE.PASSWORD:\r\n        this.showTabs.emailValidation = false;\r\n        this.showTabs.dataProvider = false;\r\n        break;\r\n      case FORM_CONTROLLER_TYPE.SEARCH:\r\n        this.showTabs.emailValidation = false;\r\n        this.showTabs.dataProvider = false;\r\n        break;\r\n      case FORM_CONTROLLER_TYPE.TEL:\r\n        this.showTabs.minMaxValidation = false;\r\n        this.showTabs.patternValidation = false;\r\n        this.showTabs.emailValidation = false;\r\n        this.showTabs.dataProvider = false;\r\n        break;\r\n      case FORM_CONTROLLER_TYPE.TEXT:\r\n        this.showTabs.emailValidation = false;\r\n        this.showTabs.dataProvider = false;\r\n        break;\r\n      case FORM_CONTROLLER_TYPE.TIME:\r\n        this.showTabs.patternValidation = false;\r\n        this.showTabs.emailValidation = false;\r\n        this.showTabs.dataProvider = false;\r\n        break;\r\n      case FORM_CONTROLLER_TYPE.URL:\r\n        this.showTabs.minMaxValidation = false;\r\n        this.showTabs.patternValidation = false;\r\n        this.showTabs.emailValidation = false;\r\n        this.showTabs.dataProvider = false;\r\n        break;\r\n      case FORM_CONTROLLER_TYPE.WEEK:\r\n        this.showTabs.patternValidation = false;\r\n        this.showTabs.emailValidation = false;\r\n        this.showTabs.dataProvider = false;\r\n        break;\r\n      case FORM_CONTROLLER_TYPE.SELECT:\r\n        this.showTabs.minMaxValidation = false;\r\n        this.showTabs.patternValidation = false;\r\n        this.showTabs.emailValidation = false;\r\n        this.showTabs.dataProvider = false;\r\n        break;\r\n      case FORM_CONTROLLER_TYPE.RADIO:\r\n        this.showTabs.minMaxValidation = false;\r\n        this.showTabs.patternValidation = false;\r\n        this.showTabs.emailValidation = false;\r\n        break;\r\n      case FORM_CONTROLLER_TYPE.CHIPS:\r\n        this.showTabs.patternValidation = false;\r\n        this.showTabs.emailValidation = false;\r\n        break;\r\n    }\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./app.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div class=\"container-fluid\">\r\n  <form #sampleForm=\"ngForm\" class=\"w-100 pt-3\">\r\n    <mat-tab-group class=\"border\" dynamicHeight>\r\n      <!--  **************************************  Basic Details TAB  **************************************  -->\r\n      <mat-tab [disabled]=\"!showTabs.basicDetails\" label=\"Basic Details\">\r\n\r\n        <div class=\"container-fluid border-right-0 border-left-0\">\r\n          <div class=\"row pt-4\">\r\n            <!--  **********************************  Type  **********************************  -->\r\n            <div class=\"col-md-4 col-sm-6 col-lg-3 px-4 mb-3\">\r\n              <mat-form-field class=\"w-100\">\r\n                <mat-label>Type</mat-label>\r\n                <mat-select autofocus (ngModelChange)=\"onTypeChange(sampleForm.value.type)\" [ngModel]=\"value.type\" required\r\n                            [disabled]=\"!showInfo.showType\" name=\"type\">\r\n                  <mat-option value=\"email\">email</mat-option>\r\n                  <mat-option value=\"color\">color</mat-option>\r\n                  <mat-option value=\"date\">date</mat-option>\r\n                  <mat-option value=\"datetime\">datetime</mat-option>\r\n                  <mat-option value=\"month\">month</mat-option>\r\n                  <mat-option value=\"number\">number</mat-option>\r\n                  <mat-option value=\"password\">password</mat-option>\r\n                  <mat-option value=\"search\">search</mat-option>\r\n                  <mat-option value=\"tel\">tel</mat-option>\r\n                  <mat-option value=\"text\">text</mat-option>\r\n                  <mat-option value=\"time\">time</mat-option>\r\n                  <mat-option value=\"url\">url</mat-option>\r\n                  <mat-option value=\"week\">week</mat-option>\r\n                  <mat-option value=\"select\">select</mat-option>\r\n                  <mat-option value=\"radio\">radio</mat-option>\r\n                  <mat-option value=\"chips\">chips</mat-option>\r\n                </mat-select>\r\n              </mat-form-field>\r\n            </div>\r\n            <!--  **********************************  Type  **********************************  -->\r\n\r\n            <!--  **********************************  Name  **********************************  -->\r\n            <div class=\"col-md-4 col-sm-6 col-lg-3 px-4 mb-3\">\r\n              <mat-form-field class=\"w-100\">\r\n                <mat-label>Name</mat-label>\r\n                <input autocomplete=\"off\" [ngModel]=\"value.name\" type=\"text\" matInput required [disabled]=\"!showInfo.showName\"\r\n                       name=\"name\"\r\n                       placeholder=\"Name\">\r\n              </mat-form-field>\r\n            </div>\r\n            <!--  **********************************  Name  **********************************  -->\r\n\r\n            <!--  **********************************  Label  **********************************  -->\r\n            <div class=\"col-md-4 col-sm-6 col-lg-3 px-4 mb-3\">\r\n              <mat-form-field class=\"w-100\">\r\n                <mat-label>Label</mat-label>\r\n                <input autocomplete=\"off\" [ngModel]=\"value.label\" type=\"text\" matInput required [disabled]=\"!showInfo.showLabel\"\r\n                       name=\"label\" placeholder=\"Label\">\r\n              </mat-form-field>\r\n            </div>\r\n            <!--  **********************************  Label  **********************************  -->\r\n\r\n            <!--  **********************************  Value  **********************************  -->\r\n            <div class=\"col-md-4 col-sm-6 col-lg-3 px-4 mb-3\">\r\n              <mat-form-field class=\"w-100\">\r\n                <mat-label>Value</mat-label>\r\n                <input autocomplete=\"off\" [ngModel]=\"value.value\" type=\"text\" matInput required [disabled]=\"!showInfo.showValue\"\r\n                       name=\"value\" placeholder=\"Value\">\r\n              </mat-form-field>\r\n            </div>\r\n            <!--  **********************************  Value  **********************************  -->\r\n\r\n            <!--  **********************************  Placeholder  **********************************  -->\r\n            <div class=\"col-md-4 col-sm-6 col-lg-3 px-4 mb-3\">\r\n              <mat-form-field class=\"w-100\">\r\n                <mat-label>Placeholder</mat-label>\r\n                <input autocomplete=\"off\" [ngModel]=\"value.placeholder\" type=\"text\" matInput [disabled]=\"!showInfo.showPlaceholder\"\r\n                       name=\"placeholder\" placeholder=\"Placeholder\">\r\n              </mat-form-field>\r\n            </div>\r\n            <!--  **********************************  Placeholder  **********************************  -->\r\n\r\n            <!--  **********************************  Controller Class  **********************************  -->\r\n            <div class=\"col-md-4 col-sm-6 col-lg-3 px-4 mb-3\">\r\n              <mat-form-field class=\"w-100\">\r\n                <mat-label>Controller Class</mat-label>\r\n                <input autocomplete=\"off\" type=\"text\" [ngModel]=\"value.controllerClass\" matInput\r\n                       [disabled]=\"!showInfo.showControllerClass\"\r\n                       name=\"controllerClass\" placeholder=\"Controller Class\">\r\n              </mat-form-field>\r\n            </div>\r\n            <!--  **********************************  Controller Class  **********************************  -->\r\n\r\n            <!--  **********************************  Column Class  **********************************  -->\r\n            <div class=\"col-md-4 col-sm-6 col-lg-3 px-4 mb-3\">\r\n              <mat-form-field class=\"w-100\">\r\n                <mat-label>Column Class</mat-label>\r\n                <input autocomplete=\"off\" [ngModel]=\"value.columnClass\" type=\"text\" matInput [disabled]=\"!showInfo.showColumnClass\"\r\n                       name=\"columnClass\" placeholder=\"Column Class\">\r\n              </mat-form-field>\r\n            </div>\r\n            <!--  **********************************  Column Class  **********************************  -->\r\n\r\n            <!--  **********************************  Hide / Show  **********************************  -->\r\n            <div class=\"col-md-4 col-sm-6 col-lg-3 px-4 mb-3 pt-4\">\r\n              <mat-checkbox [ngModel]=\"value.hide\" [disabled]=\"!showInfo.showHide\" name=\"hide\">Hide</mat-checkbox>\r\n            </div>\r\n            <!--  **********************************  Hide / Show  **********************************  -->\r\n\r\n            <!--  **********************************  Show in Grid / Hide in Grid  **********************************  -->\r\n            <div class=\"col-md-4 col-sm-6 col-lg-3 px-4 mb-3 pt-4\">\r\n              <mat-checkbox [ngModel]=\"value.showInGrid\" [disabled]=\"!showInfo.showShowInGrid\" name=\"showInGrid\">Show in Grid / Hide in Grid\r\n              </mat-checkbox>\r\n            </div>\r\n            <!--  **********************************  Show in Grid / Hide in Grid  **********************************  -->\r\n\r\n            <!--  **********************************  Disable or Enable  **********************************  -->\r\n            <div class=\"col-md-4 col-sm-6 col-lg-3 px-4 mb-3 pt-4\">\r\n              <mat-checkbox [ngModel]=\"value.disabled\" [disabled]=\"!showInfo.showDisabled\"  name=\"disabled\">Disable or Enable</mat-checkbox>\r\n            </div>\r\n            <!--  **********************************  Disable or Enable  **********************************  -->\r\n\r\n            <!--  **********************************  Multiple / Single Selection  **********************************  -->\r\n            <div class=\"col-md-4 col-sm-6 col-lg-3 px-4 mb-3 pt-4\">\r\n              <mat-checkbox [ngModel]=\"value.multiple\" [disabled]=\"!showInfo.showMultiple\" name=\"multiple\">Multiple / Single Selection\r\n              </mat-checkbox>\r\n            </div>\r\n            <!--  **********************************  Multiple / Single Selection  **********************************  -->\r\n\r\n          </div>\r\n        </div>\r\n\r\n      </mat-tab>\r\n      <!--  **************************************  Basic Details TAB  **************************************  -->\r\n\r\n\r\n      <!--  ***********************************  Required Validation TAB  ***********************************  -->\r\n      <mat-tab [disabled]=\"!showTabs.requiredValidation\" label=\"Required Validation\">\r\n        <div class=\"container-fluid border-right-0 border-left-0\">\r\n          <div class=\"row pt-4\">\r\n            <!--  **********************************  Required or No Required  **********************************  -->\r\n            <div class=\"col-md-4 col-sm-6 col-lg-3 px-4 mb-3 pt-4\">\r\n              <mat-checkbox [ngModel]=\"value.required\" [disabled]=\"!showInfo.showRequired\" name=\"required\">Required or Optional\r\n              </mat-checkbox>\r\n            </div>\r\n\r\n            <!--  **********************************  Required or No Required  **********************************  -->\r\n\r\n            <!--  **********************************  Required Error  **********************************  -->\r\n            <div class=\"col-md-4 col-sm-6 col-lg-3 px-4 mb-3\">\r\n              <mat-form-field class=\"w-100\">\r\n                <mat-label>Required Error</mat-label>\r\n                <input autocomplete=\"off\" [ngModel]=\"value.requiredError\" type=\"text\" matInput [disabled]=\"!showInfo.showRequiredError\"\r\n                       name=\"requiredError\" placeholder=\"Required Error\">\r\n              </mat-form-field>\r\n            </div>\r\n            <!--  **********************************  Required Error  **********************************  -->\r\n          </div>\r\n        </div>\r\n      </mat-tab>\r\n      <!--  ***********************************  Required Validation TAB  ***********************************  -->\r\n\r\n\r\n      <!--  *****************************************  Min Max TAB  *****************************************  -->\r\n      <mat-tab [disabled]=\"!showTabs.minMaxValidation\" label=\"Min Max Validation\">\r\n        <div class=\"container-fluid border-right-0 border-left-0\">\r\n\r\n          <div class=\"row pt-4\">\r\n            <!--  **********************************  Min Length  **********************************  -->\r\n            <div class=\"col-md-4 offset-md-2 col-sm-6 px-4 mb-3\">\r\n              <mat-form-field class=\"w-100\">\r\n                <mat-label>Min Length</mat-label>\r\n                <input autocomplete=\"off\" [ngModel]=\"value.minlength\" type=\"number\" matInput [disabled]=\"!showInfo.showMinlength\"\r\n                       name=\"minlength\" placeholder=\"Min Length\">\r\n              </mat-form-field>\r\n            </div>\r\n            <!--  **********************************  Min Length  **********************************  -->\r\n\r\n            <!--  **********************************  Min Length Error  **********************************  -->\r\n            <div class=\"col-md-4 col-sm-6 px-4 mb-3\">\r\n              <mat-form-field class=\"w-100\">\r\n                <mat-label>Min Length Error</mat-label>\r\n                <input autocomplete=\"off\" [ngModel]=\"value.minlengthError\" type=\"text\" matInput [disabled]=\"!showInfo.showMinlengthError\"\r\n                       name=\"minlengthError\" placeholder=\"Min Length Error\">\r\n              </mat-form-field>\r\n            </div>\r\n            <!--  **********************************  Min Length Error  **********************************  -->\r\n\r\n            <!--  **********************************  Max Length  **********************************  -->\r\n            <div class=\"col-md-4 offset-md-2 col-sm-6 px-4 mb-3\">\r\n              <mat-form-field class=\"w-100\">\r\n                <mat-label>Max Length</mat-label>\r\n                <input autocomplete=\"off\" [ngModel]=\"value.maxlength\" type=\"number\" matInput [disabled]=\"!showInfo.showMaxlength\"\r\n                       name=\"maxlength\" placeholder=\"Max Length\">\r\n              </mat-form-field>\r\n            </div>\r\n            <!--  **********************************  Max Length  **********************************  -->\r\n\r\n            <!--  **********************************  Max Length Error  **********************************  -->\r\n            <div class=\"col-md-4 col-sm-6 px-4 mb-3\">\r\n              <mat-form-field class=\"w-100\">\r\n                <mat-label>Max Length Error</mat-label>\r\n                <input autocomplete=\"off\" [ngModel]=\"value.maxlengthError\" type=\"text\" matInput [disabled]=\"!showInfo.showMaxlengthError\"\r\n                       name=\"maxlengthError\" placeholder=\"Max Length Error\">\r\n              </mat-form-field>\r\n            </div>\r\n            <!--  **********************************  Max Length Error  **********************************  -->\r\n\r\n            <!--  **********************************  Min  **********************************  -->\r\n            <div class=\"col-md-4 offset-md-2 col-sm-6 px-4 mb-3\">\r\n              <mat-form-field class=\"w-100\">\r\n                <mat-label>Min</mat-label>\r\n                <input autocomplete=\"off\" [ngModel]=\"value.min\" type=\"number\" matInput [disabled]=\"!showInfo.showMin\" name=\"min\"\r\n                       placeholder=\"Min\">\r\n              </mat-form-field>\r\n            </div>\r\n            <!--  **********************************  Min  **********************************  -->\r\n\r\n            <!--  **********************************  Min Error  **********************************  -->\r\n            <div class=\"col-md-4 col-sm-6 px-4 mb-3\">\r\n              <mat-form-field class=\"w-100\">\r\n                <mat-label>Min Error</mat-label>\r\n                <input autocomplete=\"off\" [ngModel]=\"value.minError\" type=\"text\" matInput [disabled]=\"!showInfo.showMinError\"\r\n                       name=\"minError\"\r\n                       placeholder=\"Min Error\">\r\n              </mat-form-field>\r\n            </div>\r\n            <!--  **********************************  Min Error  **********************************  -->\r\n\r\n            <!--  **********************************  Max  **********************************  -->\r\n            <div class=\"col-md-4 offset-md-2 col-sm-6 px-4 mb-3\">\r\n              <mat-form-field class=\"w-100\">\r\n                <mat-label>Max</mat-label>\r\n                <input autocomplete=\"off\" [ngModel]=\"value.max\" type=\"number\" matInput [disabled]=\"!showInfo.showMax\" name=\"max\"\r\n                       placeholder=\"Max\">\r\n              </mat-form-field>\r\n            </div>\r\n            <!--  **********************************  Max  **********************************  -->\r\n\r\n            <!--  **********************************  Max Error  **********************************  -->\r\n            <div class=\"col-md-4 col-sm-6 px-4 mb-3\">\r\n              <mat-form-field class=\"w-100\">\r\n                <mat-label>Max Error</mat-label>\r\n                <input autocomplete=\"off\" [ngModel]=\"value.maxError\" type=\"text\" matInput [disabled]=\"!showInfo.showMaxError\"\r\n                       name=\"maxError\"\r\n                       placeholder=\"Max Error\">\r\n              </mat-form-field>\r\n            </div>\r\n            <!--  **********************************  Max Error  **********************************  -->\r\n          </div>\r\n        </div>\r\n      </mat-tab>\r\n      <!--  *****************************************  Min Max TAB  *****************************************  -->\r\n\r\n\r\n      <!--  ***********************************  Pattern Validation TAB  ***********************************  -->\r\n      <mat-tab [disabled]=\"!showTabs.patternValidation\" label=\"Pattern Validation\">\r\n        <div class=\"container-fluid border-right-0 border-left-0\">\r\n          <div class=\"row pt-4\">\r\n            <!--  **********************************  Pattern  **********************************  -->\r\n            <div class=\"col-md-4 col-sm-6 col-lg-3 px-4 mb-3\">\r\n              <mat-form-field class=\"w-100\">\r\n                <mat-label>Pattern</mat-label>\r\n                <input autocomplete=\"off\" [ngModel]=\"value.pattern\" type=\"text\" matInput [disabled]=\"!showInfo.showPattern\" name=\"pattern\"\r\n                       placeholder=\"Pattern\">\r\n              </mat-form-field>\r\n            </div>\r\n            <!--  **********************************  Pattern  **********************************  -->\r\n\r\n            <!--  **********************************  Pattern Error  **********************************  -->\r\n            <div class=\"col-md-4 col-sm-6 col-lg-3 px-4 mb-3\">\r\n              <mat-form-field class=\"w-100\">\r\n                <mat-label>Pattern Error</mat-label>\r\n                <input autocomplete=\"off\" [ngModel]=\"value.patternError\" type=\"text\" matInput [disabled]=\"!showInfo.showPatternError\"\r\n                       name=\"patternError\" placeholder=\"Pattern Error\">\r\n              </mat-form-field>\r\n            </div>\r\n            <!--  **********************************  Pattern Error  **********************************  -->\r\n          </div>\r\n        </div>\r\n      </mat-tab>\r\n      <!--  ***********************************  Pattern Validation TAB  ***********************************  -->\r\n\r\n\r\n      <!--  ************************************  Email Validation TAB  ************************************  -->\r\n      <mat-tab [disabled]=\"!showTabs.emailValidation\" label=\"Email Validation\">\r\n        <div class=\"container-fluid border-right-0 border-left-0\">\r\n          <!--  **********************************  Email Error  **********************************  -->\r\n          <div class=\"row pt-4\">\r\n            <div class=\"col-md-4 col-sm-6 col-lg-3 px-4 mb-3\">\r\n              <mat-form-field class=\"w-100\">\r\n                <mat-label>Email Error</mat-label>\r\n                <input autocomplete=\"off\" [ngModel]=\"value.emailError\" type=\"text\" matInput [disabled]=\"!showInfo.showEmailError\"\r\n                       name=\"emailError\" placeholder=\"Email Error\">\r\n              </mat-form-field>\r\n            </div>\r\n          </div>\r\n          <!--  **********************************  Email Error  **********************************  -->\r\n        </div>\r\n      </mat-tab>\r\n      <!--  ************************************  Email Validation TAB  ************************************  -->\r\n\r\n\r\n      <!--  **********************************  Duplicate Validation TAB  **********************************  -->\r\n      <mat-tab [disabled]=\"!showTabs.duplicateValidation\" label=\"Duplicate Validation\">\r\n        <div class=\"container-fluid border-right-0 border-left-0\">\r\n          <!--  **********************************  Duplicate Message  **********************************  -->\r\n          <div class=\"row pt-4\">\r\n            <div class=\"col-md-4 col-sm-6 col-lg-3 px-4 mb-3\">\r\n              <mat-form-field class=\"w-100\">\r\n                <mat-label>Duplicate Message</mat-label>\r\n                <input autocomplete=\"off\" [ngModel]=\"value.duplicateMessage\" type=\"text\" matInput [disabled]=\"!showInfo.showDuplicateMessage\"\r\n                       name=\"duplicateMessage\" placeholder=\"Duplicate Message\">\r\n              </mat-form-field>\r\n            </div>\r\n          </div>\r\n          <!--  **********************************  Duplicate Message  **********************************  -->\r\n        </div>\r\n      </mat-tab>\r\n      <!--  **********************************  Duplicate Validation TAB  **********************************  -->\r\n\r\n\r\n      <!--  *************************************  Data Provider TAB  *************************************  -->\r\n      <mat-tab [disabled]=\"!showTabs.dataProvider\" label=\"Data Provider\">\r\n        <div class=\"container-fluid border-right-0 border-left-0\">\r\n          <div class=\"row pt-4\">\r\n            <!--  **********************************  Data Provider  **********************************  -->\r\n            <div class=\"col-md-4 col-sm-6 col-lg-3 px-4 mb-3\">\r\n              <mat-form-field class=\"w-100\">\r\n                <mat-label>Data Provider</mat-label>\r\n                <input autocomplete=\"off\" [ngModel]=\"value.dataProvider\" type=\"text\" matInput [disabled]=\"!showInfo.showDataProvider\"\r\n                       name=\"dataProvider\" placeholder=\"Data Provider\">\r\n              </mat-form-field>\r\n            </div>\r\n            <!--  **********************************  Data Provider  **********************************  -->\r\n          </div>\r\n        </div>\r\n      </mat-tab>\r\n      <!--  *************************************  Data Provider TAB  *************************************  -->\r\n\r\n    </mat-tab-group>\r\n  </form>\r\n  <div class=\"container-fluid\">\r\n    <pre class=\"w-100 bg-light p-4 d-inline-block border mt-3\">{{sampleForm.value | json}}</pre>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "ButtonComponent",
            "id": "component-ButtonComponent-44f2f1e1b3a1e0ebc1e0edafd90d05c0",
            "file": "stories/button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-button",
            "styleUrls": [
                "./button.css"
            ],
            "styles": [],
            "template": "<button   type=\"button\"\n   (click)=\"onClick.emit($event)\"\n   [ngClass]=\"classes\"\n   [ngStyle]=\"{ 'background-color': backgroundColor }\"\n >\n   {{ label }}\n </button>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "backgroundColor",
                    "description": "<p>What background color to use</p>\n",
                    "line": 26,
                    "type": "string"
                },
                {
                    "name": "label",
                    "defaultValue": "'Button'",
                    "description": "<p>Button contents</p>\n",
                    "line": 40
                },
                {
                    "name": "primary",
                    "defaultValue": "false",
                    "description": "<p>Is this the principal call to action on the page?</p>\n",
                    "line": 20
                },
                {
                    "name": "size",
                    "defaultValue": "'medium'",
                    "description": "<p>How large should the button be?</p>\n",
                    "line": 32,
                    "type": "\"small\" | \"medium\" | \"large\""
                }
            ],
            "outputsClass": [
                {
                    "name": "onClick",
                    "defaultValue": "new EventEmitter<Event>()",
                    "description": "<p>Optional click handler</p>\n",
                    "line": 46,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'storybook-button',\r\n  template: ` <button\r\n    type=\"button\"\r\n    (click)=\"onClick.emit($event)\"\r\n    [ngClass]=\"classes\"\r\n    [ngStyle]=\"{ 'background-color': backgroundColor }\"\r\n  >\r\n    {{ label }}\r\n  </button>`,\r\n  styleUrls: ['./button.css'],\r\n})\r\nexport default class ButtonComponent {\r\n  /**\r\n   * Is this the principal call to action on the page?\r\n   */\r\n  @Input()\r\n  primary = false;\r\n\r\n  /**\r\n   * What background color to use\r\n   */\r\n  @Input()\r\n  backgroundColor?: string;\r\n\r\n  /**\r\n   * How large should the button be?\r\n   */\r\n  @Input()\r\n  size: 'small' | 'medium' | 'large' = 'medium';\r\n\r\n  /**\r\n   * Button contents\r\n   *\r\n   * @required\r\n   */\r\n  @Input()\r\n  label = 'Button';\r\n\r\n  /**\r\n   * Optional click handler\r\n   */\r\n  @Output()\r\n  onClick = new EventEmitter<Event>();\r\n\r\n  public get classes(): string[] {\r\n    const mode = this.primary ? 'storybook-button--primary' : 'storybook-button--secondary';\r\n\r\n    return ['storybook-button', `storybook-button--${this.size}`, mode];\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".storybook-button {\r\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\r\n  font-weight: 700;\r\n  border: 0;\r\n  border-radius: 3em;\r\n  cursor: pointer;\r\n  display: inline-block;\r\n  line-height: 1;\r\n}\r\n.storybook-button--primary {\r\n  color: white;\r\n  background-color: #1ea7fd;\r\n}\r\n.storybook-button--secondary {\r\n  color: #333;\r\n  background-color: transparent;\r\n  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 0px 1px inset;\r\n}\r\n.storybook-button--small {\r\n  font-size: 12px;\r\n  padding: 10px 16px;\r\n}\r\n.storybook-button--medium {\r\n  font-size: 14px;\r\n  padding: 11px 20px;\r\n}\r\n.storybook-button--large {\r\n  font-size: 16px;\r\n  padding: 12px 24px;\r\n}\r\n",
                    "styleUrl": "./button.css"
                }
            ],
            "stylesData": "",
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 48
                    }
                }
            }
        },
        {
            "name": "DynamicFormComponent",
            "id": "component-DynamicFormComponent-3d59a2fbed2ce6b31233cc67ae68e9fe",
            "file": "projects/ksk/dynamic-form/src/lib/dynamic-form/dynamic-form.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ksk-dynamic-form",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./dynamic-form.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "formClass",
                    "defaultValue": "'m-4'",
                    "line": 13
                },
                {
                    "name": "formControls",
                    "defaultValue": "[]",
                    "line": 14,
                    "type": "DynamicFormControllerInterface[]"
                }
            ],
            "outputsClass": [
                {
                    "name": "change",
                    "defaultValue": "new EventEmitter()",
                    "line": 16,
                    "type": "EventEmitter<any>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "defaultColumnClass",
                    "defaultValue": "'col-md-4 mb-2'",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "dynamicForm",
                    "type": "NgForm | undefined",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'dynamicForm'"
                        }
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "getFormControls",
                    "args": [],
                    "optional": false,
                    "returnType": "DynamicFormControllerInterface[]",
                    "typeParameters": [],
                    "line": 32
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import {Component, EventEmitter, Input, Output, ViewChild} from '@angular/core';\r\nimport {NgForm} from '@angular/forms';\r\nimport {FORM_CONTROLLER_TYPE} from '../interface/form-controller.enum';\r\nimport {DynamicFormControllerInterface} from '../interface/dynamic-form-controller.interface';\r\n\r\n@Component({\r\n  selector: 'ksk-dynamic-form',\r\n  templateUrl: './dynamic-form.component.html',\r\n  styles: []\r\n})\r\nexport class DynamicFormComponent {\r\n\r\n  @Input() formClass = 'm-4';\r\n  @Input() formControls: DynamicFormControllerInterface[] = [];\r\n  @ViewChild('dynamicForm') dynamicForm: NgForm | undefined;\r\n  @Output() change: EventEmitter<any> = new EventEmitter();\r\n\r\n  defaultColumnClass = 'col-md-4 mb-2';\r\n\r\n  get form(): NgForm | undefined {\r\n    return this.dynamicForm;\r\n  }\r\n\r\n  get valid(): boolean | null {\r\n    return this.dynamicForm ? this.dynamicForm.valid : false;\r\n  }\r\n\r\n  get value(): boolean {\r\n    return this.dynamicForm ? this.dynamicForm.value : {};\r\n  }\r\n\r\n  getFormControls(): DynamicFormControllerInterface[] {\r\n    if (this.formControls && this.formControls.length > 0) {\r\n      return this.formControls.filter((d) => !d.hide);\r\n    } else {\r\n      return [];\r\n    }\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "accessors": {
                "form": {
                    "name": "form",
                    "getSignature": {
                        "name": "form",
                        "type": "",
                        "returnType": "NgForm | undefined",
                        "line": 20
                    }
                },
                "valid": {
                    "name": "valid",
                    "getSignature": {
                        "name": "valid",
                        "type": "",
                        "returnType": "boolean | null",
                        "line": 24
                    }
                },
                "value": {
                    "name": "value",
                    "getSignature": {
                        "name": "value",
                        "type": "boolean",
                        "returnType": "boolean",
                        "line": 28
                    }
                }
            },
            "templateData": "<form #dynamicForm=\"ngForm\" [class]=\"formClass\">\r\n  <div class=\"row\">\r\n\r\n    <div\r\n      [class]=\"control.columnSize ? control.columnSize : defaultColumnClass\"\r\n      *ngFor=\"let control of getFormControls()\"\r\n    >\r\n      <div class=\"col-12\">control.type : {{control.type}}</div>\r\n      <ng-container [ngSwitch]=\"true\">\r\n        <ng-container\r\n          *ngSwitchCase=\"\r\n            (control.type == 'email' ||\r\n              control.type == 'color' ||\r\n              control.type == 'date' ||\r\n              control.type == 'datetime-local' ||\r\n              control.type == 'month' ||\r\n              control.type == 'number' ||\r\n              control.type == 'password' ||\r\n              control.type == 'search' ||\r\n              control.type == 'tel' ||\r\n              control.type == 'text' ||\r\n              control.type == 'time' ||\r\n              control.type == 'url' ||\r\n              control.type == 'week') &&\r\n            !control.hide\r\n          \"\r\n        >\r\n          <mat-form-field [class]=\"control.controllerClass\">\r\n            <mat-label>{{ control.label }}</mat-label>\r\n\r\n            <input\r\n              matInput\r\n              [(ngModel)]=\"control.defaultValue\"\r\n              autocomplete=\"off\"\r\n              [email]=\"control?.type == 'email'\"\r\n              [name]=\"control.name\"\r\n              [disabled]=\"control?.disabled\"\r\n              [required]=\"control?.required\"\r\n              [minlength]=\"control?.minlength\"\r\n              [maxlength]=\"control?.maxlength\"\r\n              [min]=\"control?.min\"\r\n              (change)=\"change.emit({ control: control, form: dynamicForm })\"\r\n              [max]=\"control?.max\"\r\n              [pattern]=\"control?.pattern\"\r\n              [type]=\"control?.type\"\r\n              [placeholder]=\"control?.placeholder\"\r\n            />\r\n\r\n            <!-- Required Error -->\r\n            <mat-error\r\n              *ngIf=\"(dynamicForm?.controls)[control.name]?.errors?.required\"\r\n            >\r\n              <span *ngIf=\"control.requiredError\">{{\r\n                control.requiredError\r\n                }}</span>\r\n              <span *ngIf=\"!control.requiredError\"\r\n              >{{ control.label }} is required</span\r\n              >\r\n            </mat-error>\r\n\r\n            <!-- Email Error -->\r\n            <mat-error *ngIf=\"(dynamicForm?.controls)[control.name]?.errors?.email\">\r\n              <span *ngIf=\"control.emailError\">{{ control.emailError }}</span>\r\n              <span *ngIf=\"!control.emailError\"\r\n              >provide valid {{ control.label }}</span\r\n              >\r\n            </mat-error>\r\n\r\n            <!-- Min Error -->\r\n            <mat-error *ngIf=\"(dynamicForm?.controls)[control.name]?.errors?.min\">\r\n              <span *ngIf=\"control.minError\">{{ control.minError }}</span>\r\n              <span *ngIf=\"!control.minError\"\r\n              >Minimum {{ control.min }} {{ control.label }}(s) required</span\r\n              >\r\n            </mat-error>\r\n            <mat-error *ngIf=\"(dynamicForm?.controls)[control.name]?.errors?.max\">\r\n              <span *ngIf=\"control.maxError\">{{ control.maxError }}</span>\r\n              <span *ngIf=\"!control.maxError\"\r\n              >Maximum {{ control.max }} {{ control.label }}(s) only\r\n                required</span\r\n              >\r\n            </mat-error>\r\n\r\n            <!-- Min length Error -->\r\n            <mat-error\r\n              *ngIf=\"(dynamicForm?.controls)[control.name]?.errors?.minlength\"\r\n            >\r\n              <span *ngIf=\"control.minlengthError\">{{\r\n                control.minlengthError\r\n                }}</span>\r\n              <span *ngIf=\"!control.minlengthError\"\r\n              >Minimum {{ control.minlength }} characters reuired for\r\n                {{ control.label }}</span\r\n              >\r\n            </mat-error>\r\n\r\n            <!-- Max Length Error -->\r\n            <mat-error\r\n              *ngIf=\"(dynamicForm?.controls)[control.name]?.errors?.maxlength\"\r\n            >\r\n              <span *ngIf=\"control.maxlengthError\">{{\r\n                control.maxlengthError\r\n                }}</span>\r\n              <span *ngIf=\"!control.maxlengthError\"\r\n              >Minimum {{ control.maxlength }} characters only reuired for\r\n                {{ control.label }}</span\r\n              >\r\n            </mat-error>\r\n\r\n            <!--todo : Pattern Error -->\r\n            <!--<mat-error\r\n              *ngIf=\"(dynamicForm?.controls)[control.name]?.errors?.pattern\"\r\n            >\r\n              <span *ngIf=\"control.patternError\">{{\r\n                control.patternError\r\n                }}</span>\r\n              <span *ngIf=\"!control.patternError\"\r\n              >Invalid {{ control.label }} pattern</span\r\n              >\r\n            </mat-error>-->\r\n\r\n            <mat-hint class=\"text-danger\" *ngIf=\"control.duplicateMessage\">\r\n              <span [innerHTML]=\"control.duplicateMessage\"></span>\r\n            </mat-hint>\r\n          </mat-form-field>\r\n        </ng-container>\r\n      </ng-container>\r\n    </div>\r\n  </div>\r\n</form>\r\n"
        },
        {
            "name": "DynamicFormControllerComponent",
            "id": "component-DynamicFormControllerComponent-ca7b218e041591163a0fde2359ead00f",
            "file": "projects/ksk/dynamic-form/src/lib/dynamic-form-controller/dynamic-form-controller.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ksk-dynamic-form-controller",
            "styleUrls": [
                "./dynamic-form-controller.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./dynamic-form-controller.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "columnSize",
                    "line": 29,
                    "type": "[]"
                },
                {
                    "name": "defaultValue",
                    "line": 46,
                    "type": "any"
                },
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "line": 42
                },
                {
                    "name": "label",
                    "defaultValue": "''",
                    "line": 37
                },
                {
                    "name": "max",
                    "defaultValue": "null",
                    "line": 44,
                    "type": "any"
                },
                {
                    "name": "min",
                    "defaultValue": "null",
                    "line": 43,
                    "type": "any"
                },
                {
                    "name": "multiple",
                    "defaultValue": "false",
                    "line": 45
                },
                {
                    "name": "name",
                    "defaultValue": "''",
                    "line": 38
                },
                {
                    "name": "offsetSize",
                    "line": 18,
                    "type": "[]"
                },
                {
                    "name": "pattern",
                    "defaultValue": "null",
                    "line": 39
                },
                {
                    "name": "placeholder",
                    "defaultValue": "''",
                    "line": 40
                },
                {
                    "name": "required",
                    "defaultValue": "false",
                    "line": 41
                },
                {
                    "name": "type",
                    "defaultValue": "FORM_CONTROLLER_TYPE.TEXT",
                    "line": 36,
                    "type": "FORM_CONTROLLER_TYPE"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_columnSize",
                    "defaultValue": "[]",
                    "type": "COLUMN_SIZE_TYPE[]",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "_offsetSize",
                    "defaultValue": "[]",
                    "type": "OFFSET_SIZE_TYPE[]",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "FORM_CONTROLLER_TYPE",
                    "defaultValue": "FORM_CONTROLLER_TYPE",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 35
                }
            ],
            "methodsClass": [],
            "hostBindings": [
                {
                    "name": "class",
                    "defaultValue": "''",
                    "line": 34
                }
            ],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import {Component, HostBinding, Input} from '@angular/core';\r\nimport {FORM_CONTROLLER_TYPE} from '../interface/form-controller.enum';\r\nimport {COLUMN_SIZE_TYPE} from '../interface/column-size.type';\r\nimport {OFFSET_SIZE_TYPE} from '../interface/offset-size.type';\r\n\r\n@Component({\r\n  selector: 'ksk-dynamic-form-controller',\r\n  templateUrl: './dynamic-form-controller.component.html',\r\n  styleUrls: ['./dynamic-form-controller.component.scss']\r\n})\r\nexport class DynamicFormControllerComponent {\r\n  private _offsetSize: OFFSET_SIZE_TYPE[] = [];\r\n  get offsetSize(): OFFSET_SIZE_TYPE[] {\r\n    return this._offsetSize;\r\n  }\r\n\r\n  @Input()\r\n  set offsetSize(value: OFFSET_SIZE_TYPE[]) {\r\n    this._offsetSize = value;\r\n    this.cssClassName = `${this._offsetSize && this._offsetSize.join(' ')} ${this._columnSize && this._columnSize.join(' ')}`;\r\n  }\r\n\r\n  private _columnSize: COLUMN_SIZE_TYPE[] = [];\r\n  get columnSize(): COLUMN_SIZE_TYPE[] {\r\n    return this._columnSize;\r\n  }\r\n\r\n  @Input()\r\n  set columnSize(value: COLUMN_SIZE_TYPE[]) {\r\n    this._columnSize = value;\r\n    this.cssClassName = `${this._offsetSize && this._offsetSize.join(' ')} ${this._columnSize && this._columnSize.join(' ')}`;\r\n  }\r\n\r\n  @HostBinding('class') cssClassName = '';\r\n  FORM_CONTROLLER_TYPE = FORM_CONTROLLER_TYPE;\r\n  @Input() type: FORM_CONTROLLER_TYPE = FORM_CONTROLLER_TYPE.TEXT;\r\n  @Input() label = '';\r\n  @Input() name = '';\r\n  @Input() pattern = null;\r\n  @Input() placeholder = '';\r\n  @Input() required = false;\r\n  @Input() disabled = false;\r\n  @Input() min: any = null;\r\n  @Input() max: any = null;\r\n  @Input() multiple = false;\r\n  @Input() defaultValue: any;\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ":host {\r\n  display: inline-block;\r\n}\r\n",
                    "styleUrl": "./dynamic-form-controller.component.scss"
                }
            ],
            "stylesData": "",
            "accessors": {
                "offsetSize": {
                    "name": "offsetSize",
                    "setSignature": {
                        "name": "offsetSize",
                        "type": "void",
                        "args": [
                            {
                                "name": "value",
                                "type": "[]"
                            }
                        ],
                        "returnType": "void",
                        "line": 18,
                        "jsdoctags": [
                            {
                                "name": "value",
                                "type": "[]",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "offsetSize",
                        "type": "[]",
                        "returnType": "OFFSET_SIZE_TYPE[]",
                        "line": 13
                    }
                },
                "columnSize": {
                    "name": "columnSize",
                    "setSignature": {
                        "name": "columnSize",
                        "type": "void",
                        "args": [
                            {
                                "name": "value",
                                "type": "[]"
                            }
                        ],
                        "returnType": "void",
                        "line": 29,
                        "jsdoctags": [
                            {
                                "name": "value",
                                "type": "[]",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "columnSize",
                        "type": "[]",
                        "returnType": "COLUMN_SIZE_TYPE[]",
                        "line": 24
                    }
                }
            },
            "templateData": "<ng-container [ngSwitch]=\"type\">\r\n  <!-- ********************************************** EMAIL **********************************************  -->\r\n  <ng-container *ngSwitchCase=\"FORM_CONTROLLER_TYPE.EMAIL\">\r\n    <ng-container *ngTemplateOutlet=\"emailInputTemplateRef\"></ng-container>\r\n  </ng-container>\r\n\r\n  <!-- ********************************************** COLOR **********************************************  -->\r\n  <ng-container *ngSwitchCase=\"FORM_CONTROLLER_TYPE.COLOR\">\r\n    <ng-container *ngTemplateOutlet=\"colorInputTemplateRef\"></ng-container>\r\n  </ng-container>\r\n\r\n  <!-- ********************************************** DATE  **********************************************  -->\r\n  <ng-container *ngSwitchCase=\"FORM_CONTROLLER_TYPE.DATE\">\r\n    <ng-container *ngTemplateOutlet=\"dateInputTemplateRef\"></ng-container>\r\n  </ng-container>\r\n\r\n  <!-- ********************************************** DATETIME  **********************************************  -->\r\n  <ng-container *ngSwitchCase=\"FORM_CONTROLLER_TYPE.DATETIME\">\r\n    <ng-container *ngTemplateOutlet=\"datetimeInputTemplateRef\"></ng-container>\r\n  </ng-container>\r\n\r\n  <!-- ********************************************** MONTH **********************************************  -->\r\n  <ng-container *ngSwitchCase=\"FORM_CONTROLLER_TYPE.MONTH\">\r\n    <ng-container *ngTemplateOutlet=\"monthInputTemplateRef\"></ng-container>\r\n  </ng-container>\r\n\r\n  <!-- ********************************************** NUMBER  **********************************************  -->\r\n  <ng-container *ngSwitchCase=\"FORM_CONTROLLER_TYPE.NUMBER\">\r\n    <ng-container *ngTemplateOutlet=\"numberInputTemplateRef\"></ng-container>\r\n  </ng-container>\r\n\r\n  <!-- ********************************************** PASSWORD  **********************************************  -->\r\n  <ng-container *ngSwitchCase=\"FORM_CONTROLLER_TYPE.PASSWORD\">\r\n    <ng-container *ngTemplateOutlet=\"passwordInputTemplateRef\"></ng-container>\r\n  </ng-container>\r\n\r\n  <!-- ********************************************** SEARCH  **********************************************  -->\r\n  <ng-container *ngSwitchCase=\"FORM_CONTROLLER_TYPE.SEARCH\">\r\n    <ng-container *ngTemplateOutlet=\"searchInputTemplateRef\"></ng-container>\r\n  </ng-container>\r\n\r\n  <!-- ********************************************** TEL **********************************************  -->\r\n  <ng-container *ngSwitchCase=\"FORM_CONTROLLER_TYPE.TEL\">\r\n    <ng-container *ngTemplateOutlet=\"telInputTemplateRef\"></ng-container>\r\n  </ng-container>\r\n\r\n  <!-- ********************************************** TEXT  **********************************************  -->\r\n  <ng-container *ngSwitchCase=\"FORM_CONTROLLER_TYPE.TEXT\">\r\n    <ng-container *ngTemplateOutlet=\"textInputTemplateRef\"></ng-container>\r\n  </ng-container>\r\n\r\n  <!-- ********************************************** TIME  **********************************************  -->\r\n  <ng-container *ngSwitchCase=\"FORM_CONTROLLER_TYPE.TIME\">\r\n    <ng-container *ngTemplateOutlet=\"timeInputTemplateRef\"></ng-container>\r\n  </ng-container>\r\n\r\n  <!-- ********************************************** URL **********************************************  -->\r\n  <ng-container *ngSwitchCase=\"FORM_CONTROLLER_TYPE.URL\">\r\n    <ng-container *ngTemplateOutlet=\"urlInputTemplateRef\"></ng-container>\r\n  </ng-container>\r\n\r\n  <!-- ********************************************** WEEK  **********************************************  -->\r\n  <ng-container *ngSwitchCase=\"FORM_CONTROLLER_TYPE.WEEK\">\r\n    <ng-container *ngTemplateOutlet=\"weekInputTemplateRef\"></ng-container>\r\n  </ng-container>\r\n\r\n  <!-- ********************************************** SELECT  **********************************************  -->\r\n  <ng-container *ngSwitchCase=\"FORM_CONTROLLER_TYPE.SELECT\">\r\n    <ng-container *ngTemplateOutlet=\"selectInputTemplateRef\"></ng-container>\r\n  </ng-container>\r\n\r\n\r\n</ng-container>\r\n\r\n\r\n<!-- ********************************************** Email Input Template Ref **********************************************  -->\r\n<ng-template #emailInputTemplateRef>\r\n  <mat-form-field class=\"w-100\">\r\n    <mat-label>{{ label }}</mat-label>\r\n    <input matInput [name]=\"name\" [ngModel]=\"defaultValue\" email [placeholder]=\"placeholder\" [required]=\"required\"\r\n           [disabled]=\"disabled\"\r\n           [minLength]=\"min\"\r\n           [maxLength]=\"max\"\r\n           [pattern]=\"pattern\"\r\n           autocomplete=\"off\" type=\"email\"/></mat-form-field>\r\n</ng-template>\r\n\r\n<!-- ********************************************** Color Input Template Ref **********************************************  -->\r\n<ng-template #colorInputTemplateRef>\r\n  <mat-form-field class=\"w-100\">\r\n    <mat-label>{{ label }}</mat-label>\r\n    <input matInput [name]=\"name\" [ngModel]=\"defaultValue\" [placeholder]=\"placeholder\" [required]=\"required\"\r\n           [disabled]=\"disabled\"\r\n           autocomplete=\"off\" type=\"color\"/></mat-form-field>\r\n</ng-template>\r\n\r\n<!-- ********************************************** Date Input Template Ref  **********************************************  -->\r\n<ng-template #dateInputTemplateRef>\r\n  <mat-form-field class=\"w-100\">\r\n    <mat-label>{{ label }}</mat-label>\r\n    <input matInput [name]=\"name\"\r\n           [matDatepicker]=\"picker\"\r\n           [ngModel]=\"defaultValue\"\r\n           [placeholder]=\"placeholder\"\r\n           [min]=\"min\"\r\n           [max]=\"max\"\r\n           [required]=\"required\"\r\n           [disabled]=\"disabled\" autocomplete=\"off\"/>\r\n    <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n    <mat-datepicker #picker></mat-datepicker>\r\n  </mat-form-field>\r\n</ng-template>\r\n\r\n<!-- ********************************************** Datetime Input Template Ref  **********************************************  -->\r\n<ng-template #datetimeInputTemplateRef>\r\n  <mat-form-field class=\"w-100\">\r\n    <mat-label>{{ label }}</mat-label>\r\n    <input matInput\r\n           [name]=\"name\"\r\n           [ngModel]=\"defaultValue\"\r\n           [placeholder]=\"placeholder\"\r\n           [required]=\"required\"\r\n           [min]=\"min\"\r\n           [max]=\"max\"\r\n           [disabled]=\"disabled\"\r\n           autocomplete=\"off\" type=\"datetime-local\"/></mat-form-field>\r\n</ng-template>\r\n\r\n<!-- ********************************************** Month Input Template Ref **********************************************  -->\r\n<ng-template #monthInputTemplateRef>\r\n  <mat-form-field class=\"w-100\">\r\n    <mat-label>{{ label }}</mat-label>\r\n    <input matInput [name]=\"name\"\r\n           [ngModel]=\"defaultValue\"\r\n           [placeholder]=\"placeholder\"\r\n           [required]=\"required\"\r\n           [min]=\"min\"\r\n           [max]=\"max\"\r\n           [disabled]=\"disabled\"\r\n           autocomplete=\"off\" type=\"month\"/></mat-form-field>\r\n</ng-template>\r\n\r\n<!-- ********************************************** Number Input Template Ref  **********************************************  -->\r\n<ng-template #numberInputTemplateRef>\r\n  <mat-form-field class=\"w-100\">\r\n    <mat-label>{{ label }}</mat-label>\r\n    <input matInput [name]=\"name\"\r\n           [ngModel]=\"defaultValue\"\r\n           [placeholder]=\"placeholder\"\r\n           [required]=\"required\"\r\n           [min]=\"min\"\r\n           [max]=\"max\"\r\n           [disabled]=\"disabled\"\r\n           autocomplete=\"off\" type=\"number\"/></mat-form-field>\r\n</ng-template>\r\n\r\n<!-- ********************************************** Password Input Template Ref  **********************************************  -->\r\n<ng-template #passwordInputTemplateRef>\r\n  <mat-form-field class=\"w-100\">\r\n    <mat-label>{{ label }}</mat-label>\r\n    <input matInput [name]=\"name\"\r\n           [ngModel]=\"defaultValue\"\r\n           [placeholder]=\"placeholder\"\r\n           [required]=\"required\"\r\n           [minLength]=\"min\"\r\n           [maxLength]=\"max\"\r\n           [pattern]=\"pattern\"\r\n           [disabled]=\"disabled\"\r\n           autocomplete=\"off\" type=\"password\"/></mat-form-field>\r\n</ng-template>\r\n\r\n<!-- ********************************************** Search Input Template Ref  **********************************************  -->\r\n<ng-template #searchInputTemplateRef>\r\n  <mat-form-field class=\"w-100\">\r\n    <mat-label>{{ label }}</mat-label>\r\n    <input matInput\r\n           [name]=\"name\"\r\n           [ngModel]=\"defaultValue\"\r\n           [placeholder]=\"placeholder\"\r\n           [required]=\"required\"\r\n           [minLength]=\"min\"\r\n           [maxLength]=\"max\"\r\n           [pattern]=\"pattern\"\r\n           [disabled]=\"disabled\"\r\n           autocomplete=\"off\" type=\"search\"/></mat-form-field>\r\n</ng-template>\r\n\r\n<!-- ********************************************** Tel Input Template Ref **********************************************  -->\r\n<ng-template #telInputTemplateRef>\r\n  <mat-form-field class=\"w-100\">\r\n    <mat-label>{{ label }}</mat-label>\r\n    <input matInput [name]=\"name\"\r\n           [ngModel]=\"defaultValue\"\r\n           [minLength]=\"min\"\r\n           [maxLength]=\"max\"\r\n           [pattern]=\"pattern\"\r\n           [placeholder]=\"placeholder\"\r\n           [required]=\"required\"\r\n           [disabled]=\"disabled\"\r\n           autocomplete=\"off\" type=\"tel\"/></mat-form-field>\r\n</ng-template>\r\n\r\n<!-- ********************************************** Text Input Template Ref  **********************************************  -->\r\n<ng-template #textInputTemplateRef>\r\n  <mat-form-field class=\"w-100\">\r\n    <mat-label>{{ label }} | max: {{max}}</mat-label>\r\n    <input matInput\r\n           [name]=\"name\"\r\n           [minLength]=\"min\"\r\n           [maxLength]=\"max\"\r\n           [pattern]=\"pattern\"\r\n           [ngModel]=\"defaultValue\"\r\n           [placeholder]=\"placeholder\"\r\n           [required]=\"required\"\r\n           [disabled]=\"disabled\"\r\n           autocomplete=\"off\" type=\"text\"/></mat-form-field>\r\n</ng-template>\r\n\r\n<!-- ********************************************** Time Input Template Ref  **********************************************  -->\r\n<ng-template #timeInputTemplateRef>\r\n  <mat-form-field class=\"w-100\">\r\n    <mat-label>{{ label }}</mat-label>\r\n    <input matInput\r\n           [name]=\"name\"\r\n           [ngModel]=\"defaultValue\"\r\n           [placeholder]=\"placeholder\"\r\n           [required]=\"required\"\r\n           [min]=\"min\"\r\n           [max]=\"max\"\r\n           [disabled]=\"disabled\"\r\n           autocomplete=\"off\"\r\n           type=\"time\"/></mat-form-field>\r\n</ng-template>\r\n\r\n<!-- ********************************************** Url Input Template Ref **********************************************  -->\r\n<ng-template #urlInputTemplateRef>\r\n  <mat-form-field class=\"w-100\">\r\n    <mat-label>{{ label }}</mat-label>\r\n    <input matInput\r\n           [name]=\"name\"\r\n           [ngModel]=\"defaultValue\"\r\n           [placeholder]=\"placeholder\"\r\n           [required]=\"required\"\r\n           [disabled]=\"disabled\"\r\n           [minLength]=\"min\"\r\n           [maxLength]=\"max\"\r\n           [pattern]=\"pattern\"\r\n           autocomplete=\"off\"\r\n           type=\"url\"/></mat-form-field>\r\n</ng-template>\r\n\r\n<!-- ********************************************** Week Input Template Ref  **********************************************  -->\r\n<ng-template #weekInputTemplateRef>\r\n  <mat-form-field class=\"w-100\">\r\n    <mat-label>{{ label }}</mat-label>\r\n    <input matInput\r\n           [name]=\"name\"\r\n           [ngModel]=\"defaultValue\"\r\n           [placeholder]=\"placeholder\"\r\n           [required]=\"required\"\r\n           [min]=\"min\"\r\n           [max]=\"max\"\r\n           [disabled]=\"disabled\"\r\n           autocomplete=\"off\" type=\"week\"/></mat-form-field>\r\n</ng-template>\r\n\r\n<!-- ********************************************** select Input Template Ref  **********************************************  -->\r\n<ng-template #selectInputTemplateRef>\r\n  <mat-form-field class=\"w-100\">\r\n    <mat-label>{{ label }}</mat-label>\r\n    <mat-select [name]=\"name\"\r\n                [ngModel]=\"defaultValue\"\r\n                [disabled]=\"disabled\"\r\n                *ngIf=\"multiple\"\r\n                [required]=\"required\"\r\n                multiple>\r\n      <mat-option [value]=\"'test1'\">Test 1</mat-option>\r\n      <mat-option [value]=\"'test2'\">Test 2</mat-option>\r\n      <mat-option [value]=\"'test3'\">Test 3</mat-option>\r\n      <mat-option [value]=\"'test4'\">Test 4</mat-option>\r\n      <mat-option [value]=\"'test5'\">Test 5</mat-option>\r\n    </mat-select>\r\n    <mat-select [name]=\"name\"\r\n                [ngModel]=\"defaultValue\"\r\n                [disabled]=\"disabled\"\r\n                [required]=\"required\"\r\n                *ngIf=\"!multiple\">\r\n      <mat-option [value]=\"'test1'\">Test 1</mat-option>\r\n      <mat-option [value]=\"'test2'\">Test 2</mat-option>\r\n      <mat-option [value]=\"'test3'\">Test 3</mat-option>\r\n      <mat-option [value]=\"'test4'\">Test 4</mat-option>\r\n      <mat-option [value]=\"'test5'\">Test 5</mat-option>\r\n    </mat-select>\r\n  </mat-form-field>\r\n</ng-template>\r\n\r\n"
        },
        {
            "name": "HeaderComponent",
            "id": "component-HeaderComponent-c349aa42f2121da4b5737d60a50fa413",
            "file": "stories/header.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-header",
            "styleUrls": [
                "./header.css"
            ],
            "styles": [],
            "template": "<header>    <div class=\"wrapper\">\n      <div>\n        <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z\"\n              fill=\"#FFF\"\n            />\n            <path\n              d=\"M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z\"\n              fill=\"#555AB9\"\n            />\n            <path\n              d=\"M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z\"\n              fill=\"#91BAF8\"\n            />\n          </g>\n        </svg>\n        <h1>Acme</h1>\n      </div>\n      <div>\n        <storybook-button\n          *ngIf=\"user\"\n          size=\"small\"\n          (onClick)=\"onLogout.emit($event)\"\n          label=\"Log out\"\n        ></storybook-button>\n        <storybook-button\n          *ngIf=\"!user\"\n          size=\"small\"\n          (onClick)=\"onLogin.emit($event)\"\n          label=\"Log in\"\n        ></storybook-button>\n        <storybook-button\n          *ngIf=\"!user\"\n          primary\n          size=\"small\"\n          (onClick)=\"onCreateAccount.emit($event)\"\n          label=\"Sign up\"\n        ></storybook-button>\n      </div>\n    </div>\n  </header>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "user",
                    "defaultValue": "null",
                    "line": 53,
                    "type": "unknown"
                }
            ],
            "outputsClass": [
                {
                    "name": "onCreateAccount",
                    "defaultValue": "new EventEmitter<Event>()",
                    "line": 62,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogin",
                    "defaultValue": "new EventEmitter<Event>()",
                    "line": 56,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogout",
                    "defaultValue": "new EventEmitter<Event>()",
                    "line": 59,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'storybook-header',\r\n  template: `<header>\r\n    <div class=\"wrapper\">\r\n      <div>\r\n        <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\">\r\n          <g fill=\"none\" fillRule=\"evenodd\">\r\n            <path\r\n              d=\"M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z\"\r\n              fill=\"#FFF\"\r\n            />\r\n            <path\r\n              d=\"M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z\"\r\n              fill=\"#555AB9\"\r\n            />\r\n            <path\r\n              d=\"M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z\"\r\n              fill=\"#91BAF8\"\r\n            />\r\n          </g>\r\n        </svg>\r\n        <h1>Acme</h1>\r\n      </div>\r\n      <div>\r\n        <storybook-button\r\n          *ngIf=\"user\"\r\n          size=\"small\"\r\n          (onClick)=\"onLogout.emit($event)\"\r\n          label=\"Log out\"\r\n        ></storybook-button>\r\n        <storybook-button\r\n          *ngIf=\"!user\"\r\n          size=\"small\"\r\n          (onClick)=\"onLogin.emit($event)\"\r\n          label=\"Log in\"\r\n        ></storybook-button>\r\n        <storybook-button\r\n          *ngIf=\"!user\"\r\n          primary\r\n          size=\"small\"\r\n          (onClick)=\"onCreateAccount.emit($event)\"\r\n          label=\"Sign up\"\r\n        ></storybook-button>\r\n      </div>\r\n    </div>\r\n  </header>`,\r\n  styleUrls: ['./header.css'],\r\n})\r\nexport default class HeaderComponent {\r\n  @Input()\r\n  user: unknown = null;\r\n\r\n  @Output()\r\n  onLogin = new EventEmitter<Event>();\r\n\r\n  @Output()\r\n  onLogout = new EventEmitter<Event>();\r\n\r\n  @Output()\r\n  onCreateAccount = new EventEmitter<Event>();\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".wrapper {\r\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\r\n  border-bottom: 1px solid rgba(0, 0, 0, 0.1);\r\n  padding: 15px 20px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n}\r\n\r\nsvg {\r\n  display: inline-block;\r\n  vertical-align: top;\r\n}\r\n\r\nh1 {\r\n  font-weight: 900;\r\n  font-size: 20px;\r\n  line-height: 1;\r\n  margin: 6px 0 6px 10px;\r\n  display: inline-block;\r\n  vertical-align: top;\r\n}\r\n\r\nbutton + button {\r\n  margin-left: 10px;\r\n}\r\n",
                    "styleUrl": "./header.css"
                }
            ],
            "stylesData": ""
        },
        {
            "name": "PageComponent",
            "id": "component-PageComponent-caf3f2fce2bf7356cf7ccd76b8a88482",
            "file": "stories/page.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-page",
            "styleUrls": [
                "./page.css"
            ],
            "styles": [],
            "template": "<article>    <storybook-header\n      [user]=\"user\"\n      (onLogout)=\"onLogout.emit($event)\"\n      (onLogin)=\"onLogin.emit($event)\"\n      (onCreateAccount)=\"onCreateAccount.emit($event)\"\n    ></storybook-header>\n    <section>\n      <h2>Pages in Storybook</h2>\n      <p>\n        We recommend building UIs with a\n        <a href=\"https://componentdriven.org\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <strong>component-driven</strong>\n        </a>\n        process starting with atomic components and ending with pages.\n      </p>\n      <p>\n        Render pages with mock data. This makes it easy to build and review page states without\n        needing to navigate to them in your app. Here are some handy patterns for managing page data\n        in Storybook:\n      </p>\n      <ul>\n        <li>\n          Use a higher-level connected component. Storybook helps you compose such data from the\n          \"args\" of child component stories\n        </li>\n        <li>\n          Assemble data in the page component from your services. You can mock these services out\n          using Storybook.\n        </li>\n      </ul>\n      <p>\n        Get a guided tutorial on component-driven development at\n        <a href=\"https://www.learnstorybook.com\" target=\"_blank\" rel=\"noopener noreferrer\">\n          Learn Storybook\n        </a>\n        . Read more in the\n        <a href=\"https://storybook.js.org/docs\" target=\"_blank\" rel=\"noopener noreferrer\">\n          docs\n        </a>\n        .\n      </p>\n      <div class=\"tip-wrapper\">\n        <span class=\"tip\">Tip</span> Adjust the width of the canvas with the\n        <svg width=\"10\" height=\"10\" viewBox=\"0 0 12 12\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0 01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0 010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z\"\n              id=\"a\"\n              fill=\"#999\"\n            />\n          </g>\n        </svg>\n        Viewports addon in the toolbar\n      </div>\n    </section>\n  </article>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "user",
                    "defaultValue": "null",
                    "line": 66,
                    "type": "unknown"
                }
            ],
            "outputsClass": [
                {
                    "name": "onCreateAccount",
                    "defaultValue": "new EventEmitter<Event>()",
                    "line": 75,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogin",
                    "defaultValue": "new EventEmitter<Event>()",
                    "line": 69,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogout",
                    "defaultValue": "new EventEmitter<Event>()",
                    "line": 72,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'storybook-page',\r\n  template: `<article>\r\n    <storybook-header\r\n      [user]=\"user\"\r\n      (onLogout)=\"onLogout.emit($event)\"\r\n      (onLogin)=\"onLogin.emit($event)\"\r\n      (onCreateAccount)=\"onCreateAccount.emit($event)\"\r\n    ></storybook-header>\r\n    <section>\r\n      <h2>Pages in Storybook</h2>\r\n      <p>\r\n        We recommend building UIs with a\r\n        <a href=\"https://componentdriven.org\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n          <strong>component-driven</strong>\r\n        </a>\r\n        process starting with atomic components and ending with pages.\r\n      </p>\r\n      <p>\r\n        Render pages with mock data. This makes it easy to build and review page states without\r\n        needing to navigate to them in your app. Here are some handy patterns for managing page data\r\n        in Storybook:\r\n      </p>\r\n      <ul>\r\n        <li>\r\n          Use a higher-level connected component. Storybook helps you compose such data from the\r\n          \"args\" of child component stories\r\n        </li>\r\n        <li>\r\n          Assemble data in the page component from your services. You can mock these services out\r\n          using Storybook.\r\n        </li>\r\n      </ul>\r\n      <p>\r\n        Get a guided tutorial on component-driven development at\r\n        <a href=\"https://www.learnstorybook.com\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n          Learn Storybook\r\n        </a>\r\n        . Read more in the\r\n        <a href=\"https://storybook.js.org/docs\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n          docs\r\n        </a>\r\n        .\r\n      </p>\r\n      <div class=\"tip-wrapper\">\r\n        <span class=\"tip\">Tip</span> Adjust the width of the canvas with the\r\n        <svg width=\"10\" height=\"10\" viewBox=\"0 0 12 12\" xmlns=\"http://www.w3.org/2000/svg\">\r\n          <g fill=\"none\" fillRule=\"evenodd\">\r\n            <path\r\n              d=\"M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0 01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0 010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z\"\r\n              id=\"a\"\r\n              fill=\"#999\"\r\n            />\r\n          </g>\r\n        </svg>\r\n        Viewports addon in the toolbar\r\n      </div>\r\n    </section>\r\n  </article>`,\r\n  styleUrls: ['./page.css'],\r\n})\r\nexport default class PageComponent {\r\n  @Input()\r\n  user: unknown = null;\r\n\r\n  @Output()\r\n  onLogin = new EventEmitter<Event>();\r\n\r\n  @Output()\r\n  onLogout = new EventEmitter<Event>();\r\n\r\n  @Output()\r\n  onCreateAccount = new EventEmitter<Event>();\r\n}\r\n\r\n// export const Page = ({ user, onLogin, onLogout, onCreateAccount }) => (\r\n//   <article>\r\n//     <Header user={user} onLogin={onLogin} onLogout={onLogout} onCreateAccount={onCreateAccount} />\r\n\r\n// );\r\n// Page.propTypes = {\r\n//   user: PropTypes.shape({}),\r\n//   onLogin: PropTypes.func.isRequired,\r\n//   onLogout: PropTypes.func.isRequired,\r\n//   onCreateAccount: PropTypes.func.isRequired,\r\n// };\r\n\r\n// Page.defaultProps = {\r\n//   user: null,\r\n// };\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "section {\r\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\r\n  font-size: 14px;\r\n  line-height: 24px;\r\n  padding: 48px 20px;\r\n  margin: 0 auto;\r\n  max-width: 600px;\r\n  color: #333;\r\n}\r\n\r\nh2 {\r\n  font-weight: 900;\r\n  font-size: 32px;\r\n  line-height: 1;\r\n  margin: 0 0 4px;\r\n  display: inline-block;\r\n  vertical-align: top;\r\n}\r\n\r\np {\r\n  margin: 1em 0;\r\n}\r\n\r\na {\r\n  text-decoration: none;\r\n  color: #1ea7fd;\r\n}\r\n\r\nul {\r\n  padding-left: 30px;\r\n  margin: 1em 0;\r\n}\r\n\r\nli {\r\n  margin-bottom: 8px;\r\n}\r\n\r\n.tip {\r\n  display: inline-block;\r\n  border-radius: 1em;\r\n  font-size: 11px;\r\n  line-height: 12px;\r\n  font-weight: 700;\r\n  background: #e7fdd8;\r\n  color: #66bf3c;\r\n  padding: 4px 12px;\r\n  margin-right: 10px;\r\n  vertical-align: top;\r\n}\r\n\r\n.tip-wrapper {\r\n  font-size: 13px;\r\n  line-height: 20px;\r\n  margin-top: 40px;\r\n  margin-bottom: 40px;\r\n}\r\n\r\n.tip-wrapper svg {\r\n  display: inline-block;\r\n  height: 12px;\r\n  width: 12px;\r\n  margin-right: 4px;\r\n  vertical-align: top;\r\n  margin-top: 3px;\r\n}\r\n\r\n.tip-wrapper svg path {\r\n  fill: #1ea7fd;\r\n}\r\n",
                    "styleUrl": "./page.css"
                }
            ],
            "stylesData": ""
        }
    ],
    "modules": [
        {
            "name": "AppModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AppRoutingModule"
                        },
                        {
                            "name": "DynamicFormModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppRoutingModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "DynamicFormModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "DynamicFormComponent"
                        },
                        {
                            "name": "DynamicFormControllerComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "DynamicFormComponent"
                        },
                        {
                            "name": "DynamicFormControllerComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "ColorFormController",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ksk/dynamic-form/src/lib/dynamic-form.stories.ts",
                "type": "",
                "defaultValue": "() => ({\r\n  component: DynamicFormControllerComponent,\r\n  props: {\r\n    type: radios('type', FORM_CONTROLLER_TYPE, FORM_CONTROLLER_TYPE.COLOR),\r\n    label: text('label', 'label'),\r\n    columnSize: ['col-md-4'],\r\n    offsetSize: [ 'offset-md-4'],\r\n    name: text('name', ''),\r\n    placeholder: text('placeholder', 'Place Holder'),\r\n    disabled: boolean('disabled', false),\r\n    min: number('min', 0),\r\n    max: number('max', 0),\r\n    required: boolean('required', false),\r\n  },\r\n  template: `\r\n      <div class=\"row\">\r\n        <ksk-dynamic-form-controller [placeholder]=\"placeholder\" [max]=\"max\" [min]=\"min\" [required]=\"required\" [name]=\"name\" [disabled]=\"disabled\" [offsetSize]=\"offsetSize\" [columnSize]=\"columnSize\" [type]=\"type\" [label]=\"label\"></ksk-dynamic-form-controller>\r\n      </div>\r\n   `\r\n})"
            },
            {
                "name": "context",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/integration-testing/src/test.ts",
                "type": "",
                "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
            },
            {
                "name": "context",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ksk/dynamic-form/src/test.ts",
                "type": "",
                "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
            },
            {
                "name": "DateFormController",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ksk/dynamic-form/src/lib/dynamic-form.stories.ts",
                "type": "",
                "defaultValue": "() => ({\r\n  component: DynamicFormControllerComponent,\r\n  props: {\r\n    type: radios('type', FORM_CONTROLLER_TYPE, FORM_CONTROLLER_TYPE.DATE),\r\n    label: text('label', 'label'),\r\n    columnSize: ['col-md-4'],\r\n    offsetSize: [ 'offset-md-4'],\r\n    name: text('name', ''),\r\n    placeholder: text('placeholder', 'Place Holder'),\r\n    disabled: boolean('disabled', false),\r\n    min: number('min', 0),\r\n    max: number('max', 0),\r\n    required: boolean('required', false),\r\n  },\r\n  template: `\r\n      <div class=\"row\">\r\n        <ksk-dynamic-form-controller [placeholder]=\"placeholder\" [max]=\"max\" [min]=\"min\" [required]=\"required\" [name]=\"name\" [disabled]=\"disabled\" [offsetSize]=\"offsetSize\" [columnSize]=\"columnSize\" [type]=\"type\" [label]=\"label\"></ksk-dynamic-form-controller>\r\n      </div>\r\n   `\r\n})"
            },
            {
                "name": "DatetimeFormController",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ksk/dynamic-form/src/lib/dynamic-form.stories.ts",
                "type": "",
                "defaultValue": "() => ({\r\n  component: DynamicFormControllerComponent,\r\n  props: {\r\n    type: radios('type', FORM_CONTROLLER_TYPE, FORM_CONTROLLER_TYPE.DATETIME),\r\n    label: text('label', 'label'),\r\n    columnSize: ['col-md-4'],\r\n    offsetSize: [ 'offset-md-4'],\r\n    name: text('name', ''),\r\n    placeholder: text('placeholder', 'Place Holder'),\r\n    disabled: boolean('disabled', false),\r\n    min: number('min', 0),\r\n    max: number('max', 0),\r\n    required: boolean('required', false),\r\n  },\r\n  template: `\r\n      <div class=\"row\">\r\n        <ksk-dynamic-form-controller [placeholder]=\"placeholder\" [max]=\"max\" [min]=\"min\" [required]=\"required\" [name]=\"name\" [disabled]=\"disabled\" [offsetSize]=\"offsetSize\" [columnSize]=\"columnSize\" [type]=\"type\" [label]=\"label\"></ksk-dynamic-form-controller>\r\n      </div>\r\n   `\r\n})"
            },
            {
                "name": "EmailFormController",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ksk/dynamic-form/src/lib/dynamic-form.stories.ts",
                "type": "",
                "defaultValue": "() => ({\r\n  component: DynamicFormControllerComponent,\r\n  props: {\r\n    type: radios('type', FORM_CONTROLLER_TYPE, FORM_CONTROLLER_TYPE.EMAIL),\r\n    label: text('label', 'label'),\r\n    columnSize: ['col-md-4'],\r\n    offsetSize: [ 'offset-md-4'],\r\n    name: text('name', ''),\r\n    placeholder: text('placeholder', 'Place Holder'),\r\n    disabled: boolean('disabled', false),\r\n    min: number('min', 0),\r\n    max: number('max', 10),\r\n    required: boolean('required', false),\r\n  },\r\n  template: `\r\n      <div class=\"row\">\r\n        <ksk-dynamic-form-controller [placeholder]=\"placeholder\" [max]=\"max\" [min]=\"min\" [required]=\"required\" [name]=\"name\" [disabled]=\"disabled\" [offsetSize]=\"offsetSize\" [columnSize]=\"columnSize\" [type]=\"type\" [label]=\"label\"></ksk-dynamic-form-controller>\r\n      </div>\r\n   `\r\n})"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/integration-testing/src/environments/environment.prod.ts",
                "type": "object",
                "defaultValue": "{\r\n  production: true\r\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/integration-testing/src/environments/environment.ts",
                "type": "object",
                "defaultValue": "{\r\n  production: false\r\n}"
            },
            {
                "name": "Large",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/Button.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedIn",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/Header.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedIn",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/Page.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedOut",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/Header.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedOut",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/Page.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "MonthFormController",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ksk/dynamic-form/src/lib/dynamic-form.stories.ts",
                "type": "",
                "defaultValue": "() => ({\r\n  component: DynamicFormControllerComponent,\r\n  props: {\r\n    type: radios('type', FORM_CONTROLLER_TYPE, FORM_CONTROLLER_TYPE.MONTH),\r\n    label: text('label', 'label'),\r\n    columnSize: ['col-md-4'],\r\n    offsetSize: [ 'offset-md-4'],\r\n    name: text('name', ''),\r\n    placeholder: text('placeholder', 'Place Holder'),\r\n    disabled: boolean('disabled', false),\r\n    min: number('min', 0),\r\n    max: number('max', 0),\r\n    required: boolean('required', false),\r\n  },\r\n  template: `\r\n      <div class=\"row\">\r\n        <ksk-dynamic-form-controller [placeholder]=\"placeholder\" [max]=\"max\" [min]=\"min\" [required]=\"required\" [name]=\"name\" [disabled]=\"disabled\" [offsetSize]=\"offsetSize\" [columnSize]=\"columnSize\" [type]=\"type\" [label]=\"label\"></ksk-dynamic-form-controller>\r\n      </div>\r\n   `\r\n})"
            },
            {
                "name": "NumberFormController",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ksk/dynamic-form/src/lib/dynamic-form.stories.ts",
                "type": "",
                "defaultValue": "() => ({\r\n  component: DynamicFormControllerComponent,\r\n  props: {\r\n    type: radios('type', FORM_CONTROLLER_TYPE, FORM_CONTROLLER_TYPE.NUMBER),\r\n    label: text('label', 'label'),\r\n    columnSize: ['col-md-4'],\r\n    offsetSize: [ 'offset-md-4'],\r\n    name: text('name', ''),\r\n    placeholder: text('placeholder', 'Place Holder'),\r\n    disabled: boolean('disabled', false),\r\n    min: number('min', 0),\r\n    max: number('max', 0),\r\n    required: boolean('required', false),\r\n  },\r\n  template: `\r\n      <div class=\"row\">\r\n        <ksk-dynamic-form-controller [placeholder]=\"placeholder\" [max]=\"max\" [min]=\"min\" [required]=\"required\" [name]=\"name\" [disabled]=\"disabled\" [offsetSize]=\"offsetSize\" [columnSize]=\"columnSize\" [type]=\"type\" [label]=\"label\"></ksk-dynamic-form-controller>\r\n      </div>\r\n   `\r\n})"
            },
            {
                "name": "PasswordFormController",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ksk/dynamic-form/src/lib/dynamic-form.stories.ts",
                "type": "",
                "defaultValue": "() => ({\r\n  component: DynamicFormControllerComponent,\r\n  props: {\r\n    type: radios('type', FORM_CONTROLLER_TYPE, FORM_CONTROLLER_TYPE.PASSWORD),\r\n    label: text('label', 'label'),\r\n    columnSize: ['col-md-4'],\r\n    offsetSize: [ 'offset-md-4'],\r\n    name: text('name', ''),\r\n    placeholder: text('placeholder', 'Place Holder'),\r\n    disabled: boolean('disabled', false),\r\n    min: number('min', 0),\r\n    max: number('max', 0),\r\n    required: boolean('required', false),\r\n  },\r\n  template: `\r\n      <div class=\"row\">\r\n        <ksk-dynamic-form-controller [placeholder]=\"placeholder\" [max]=\"max\" [min]=\"min\" [required]=\"required\" [name]=\"name\" [disabled]=\"disabled\" [offsetSize]=\"offsetSize\" [columnSize]=\"columnSize\" [type]=\"type\" [label]=\"label\"></ksk-dynamic-form-controller>\r\n      </div>\r\n   `\r\n})"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/Button.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "require",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/integration-testing/src/test.ts",
                "type": "literal type"
            },
            {
                "name": "require",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ksk/dynamic-form/src/test.ts",
                "type": "literal type"
            },
            {
                "name": "SearchFormController",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ksk/dynamic-form/src/lib/dynamic-form.stories.ts",
                "type": "",
                "defaultValue": "() => ({\r\n  component: DynamicFormControllerComponent,\r\n  props: {\r\n    type: radios('type', FORM_CONTROLLER_TYPE, FORM_CONTROLLER_TYPE.SEARCH),\r\n    label: text('label', 'label'),\r\n    columnSize: ['col-md-4'],\r\n    offsetSize: [ 'offset-md-4'],\r\n    name: text('name', ''),\r\n    placeholder: text('placeholder', 'Place Holder'),\r\n    disabled: boolean('disabled', false),\r\n    min: number('min', 0),\r\n    max: number('max', 0),\r\n    required: boolean('required', false),\r\n  },\r\n  template: `\r\n      <div class=\"row\">\r\n        <ksk-dynamic-form-controller [placeholder]=\"placeholder\" [max]=\"max\" [min]=\"min\" [required]=\"required\" [name]=\"name\" [disabled]=\"disabled\" [offsetSize]=\"offsetSize\" [columnSize]=\"columnSize\" [type]=\"type\" [label]=\"label\"></ksk-dynamic-form-controller>\r\n      </div>\r\n   `\r\n})"
            },
            {
                "name": "Secondary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/Button.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "SelectFormController",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ksk/dynamic-form/src/lib/dynamic-form.stories.ts",
                "type": "",
                "defaultValue": "() => ({\r\n  component: DynamicFormControllerComponent,\r\n  props: {\r\n    type: radios('type', FORM_CONTROLLER_TYPE, FORM_CONTROLLER_TYPE.SELECT),\r\n    label: text('label', 'label'),\r\n    columnSize: ['col-md-4'],\r\n    offsetSize: [ 'offset-md-4'],\r\n    name: text('name', ''),\r\n    placeholder: text('placeholder', 'Place Holder'),\r\n    disabled: boolean('disabled', false),\r\n    min: number('min', 0),\r\n    max: number('max', 0),\r\n    required: boolean('required', false),\r\n    multiple: boolean('multiple', false),\r\n  },\r\n  template: `\r\n      <div class=\"row\">\r\n        <ksk-dynamic-form-controller [multiple]=\"multiple\" [placeholder]=\"placeholder\" [max]=\"max\" [min]=\"min\" [required]=\"required\" [name]=\"name\" [disabled]=\"disabled\" [offsetSize]=\"offsetSize\" [columnSize]=\"columnSize\" [type]=\"type\" [label]=\"label\"></ksk-dynamic-form-controller>\r\n      </div>\r\n   `\r\n})"
            },
            {
                "name": "Small",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/Button.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "TelFormController",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ksk/dynamic-form/src/lib/dynamic-form.stories.ts",
                "type": "",
                "defaultValue": "() => ({\r\n  component: DynamicFormControllerComponent,\r\n  props: {\r\n    type: radios('type', FORM_CONTROLLER_TYPE, FORM_CONTROLLER_TYPE.TEL),\r\n    label: text('label', 'label'),\r\n    columnSize: ['col-md-4'],\r\n    offsetSize: [ 'offset-md-4'],\r\n    name: text('name', ''),\r\n    placeholder: text('placeholder', 'Place Holder'),\r\n    disabled: boolean('disabled', false),\r\n    min: number('min', 0),\r\n    max: number('max', 0),\r\n    required: boolean('required', false),\r\n  },\r\n  template: `\r\n      <div class=\"row\">\r\n        <ksk-dynamic-form-controller [placeholder]=\"placeholder\" [max]=\"max\" [min]=\"min\" [required]=\"required\" [name]=\"name\" [disabled]=\"disabled\" [offsetSize]=\"offsetSize\" [columnSize]=\"columnSize\" [type]=\"type\" [label]=\"label\"></ksk-dynamic-form-controller>\r\n      </div>\r\n   `\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/Button.stories.ts",
                "type": "Story<Button>",
                "defaultValue": "(args: Button) => ({\r\n  component: Button,\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/Header.stories.ts",
                "type": "Story<Header>",
                "defaultValue": "(args: Header) => ({\r\n  component: Header,\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/Page.stories.ts",
                "type": "Story<Page>",
                "defaultValue": "(args: Page) => ({\r\n  component: Page,\r\n  props: args,\r\n})"
            },
            {
                "name": "TextFormController",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ksk/dynamic-form/src/lib/dynamic-form.stories.ts",
                "type": "",
                "defaultValue": "() => ({\r\n  component: DynamicFormControllerComponent,\r\n  props: {\r\n    type: radios('type', FORM_CONTROLLER_TYPE, FORM_CONTROLLER_TYPE.TEXT),\r\n    label: text('label', 'label'),\r\n    columnSize: ['col-md-4'],\r\n    offsetSize: [ 'offset-md-4'],\r\n    name: text('name', ''),\r\n    placeholder: text('placeholder', 'Place Holder'),\r\n    disabled: boolean('disabled', false),\r\n    min: number('min', 0),\r\n    max: number('max', 0),\r\n    required: boolean('required', false),\r\n  },\r\n  template: `\r\n      <div class=\"row\">\r\n        <ksk-dynamic-form-controller [placeholder]=\"placeholder\" [max]=\"max\" [min]=\"min\" [required]=\"required\" [name]=\"name\" [disabled]=\"disabled\" [offsetSize]=\"offsetSize\" [columnSize]=\"columnSize\" [type]=\"type\" [label]=\"label\"></ksk-dynamic-form-controller>\r\n      </div>\r\n   `\r\n})"
            },
            {
                "name": "TimeFormController",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ksk/dynamic-form/src/lib/dynamic-form.stories.ts",
                "type": "",
                "defaultValue": "() => ({\r\n  component: DynamicFormControllerComponent,\r\n  props: {\r\n    type: radios('type', FORM_CONTROLLER_TYPE, FORM_CONTROLLER_TYPE.TIME),\r\n    label: text('label', 'label'),\r\n    columnSize: ['col-md-4'],\r\n    offsetSize: [ 'offset-md-4'],\r\n    name: text('name', ''),\r\n    placeholder: text('placeholder', 'Place Holder'),\r\n    disabled: boolean('disabled', false),\r\n    min: number('min', 0),\r\n    max: number('max', 0),\r\n    required: boolean('required', false),\r\n  },\r\n  template: `\r\n      <div class=\"row\">\r\n        <ksk-dynamic-form-controller [placeholder]=\"placeholder\" [max]=\"max\" [min]=\"min\" [required]=\"required\" [name]=\"name\" [disabled]=\"disabled\" [offsetSize]=\"offsetSize\" [columnSize]=\"columnSize\" [type]=\"type\" [label]=\"label\"></ksk-dynamic-form-controller>\r\n      </div>\r\n   `\r\n})"
            },
            {
                "name": "UrlFormController",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ksk/dynamic-form/src/lib/dynamic-form.stories.ts",
                "type": "",
                "defaultValue": "() => ({\r\n  component: DynamicFormControllerComponent,\r\n  props: {\r\n    type: radios('type', FORM_CONTROLLER_TYPE, FORM_CONTROLLER_TYPE.URL),\r\n    label: text('label', 'label'),\r\n    columnSize: ['col-md-4'],\r\n    offsetSize: [ 'offset-md-4'],\r\n    name: text('name', ''),\r\n    placeholder: text('placeholder', 'Place Holder'),\r\n    disabled: boolean('disabled', false),\r\n    min: number('min', 0),\r\n    max: number('max', 0),\r\n    required: boolean('required', false),\r\n  },\r\n  template: `\r\n      <div class=\"row\">\r\n        <ksk-dynamic-form-controller [placeholder]=\"placeholder\" [max]=\"max\" [min]=\"min\" [required]=\"required\" [name]=\"name\" [disabled]=\"disabled\" [offsetSize]=\"offsetSize\" [columnSize]=\"columnSize\" [type]=\"type\" [label]=\"label\"></ksk-dynamic-form-controller>\r\n      </div>\r\n   `\r\n})"
            },
            {
                "name": "WeekFormController",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ksk/dynamic-form/src/lib/dynamic-form.stories.ts",
                "type": "",
                "defaultValue": "() => ({\r\n  component: DynamicFormControllerComponent,\r\n  props: {\r\n    type: radios('type', FORM_CONTROLLER_TYPE, FORM_CONTROLLER_TYPE.WEEK),\r\n    label: text('label', 'label'),\r\n    columnSize: ['col-md-4'],\r\n    offsetSize: [ 'offset-md-4'],\r\n    name: text('name', ''),\r\n    placeholder: text('placeholder', 'Place Holder'),\r\n    disabled: boolean('disabled', false),\r\n    min: number('min', 0),\r\n    max: number('max', 0),\r\n    required: boolean('required', false),\r\n  },\r\n  template: `\r\n      <div class=\"row\">\r\n        <ksk-dynamic-form-controller [placeholder]=\"placeholder\" [max]=\"max\" [min]=\"min\" [required]=\"required\" [name]=\"name\" [disabled]=\"disabled\" [offsetSize]=\"offsetSize\" [columnSize]=\"columnSize\" [type]=\"type\" [label]=\"label\"></ksk-dynamic-form-controller>\r\n      </div>\r\n   `\r\n})"
            }
        ],
        "functions": [
            {
                "name": "getDynamicFormController",
                "file": "projects/ksk/dynamic-form/src/lib/interface/dynamic-form-controller.interface.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "description": "",
                "args": [
                    {
                        "name": "type"
                    },
                    {
                        "name": "label"
                    },
                    {
                        "name": "value",
                        "type": "any"
                    },
                    {
                        "name": "name"
                    },
                    {
                        "name": "placeholder"
                    },
                    {
                        "name": "props",
                        "type": "object"
                    },
                    {
                        "name": "columnSize"
                    },
                    {
                        "name": "offsetSize"
                    }
                ],
                "returnType": "DynamicFormControllerInterface",
                "jsdoctags": [
                    {
                        "name": "type",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "label",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "value",
                        "type": "any",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "name",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "placeholder",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "props",
                        "type": "object",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "columnSize",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "offsetSize",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        ],
        "typealiases": [
            {
                "name": "COLUMN_SIZE_TYPE",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"col-1\" | \"col-2\" | \"col-3\" | \"col-4\" | \"col-5\" | \"col-6\" | \"col-7\" | \"col-8\" | \"col-9\" | \"col-10\" | \"col-11\" | \"col-12\" | \"col-xs-1\" | \"col-xs-2\" | \"col-xs-3\" | \"col-xs-4\" | \"col-xs-5\" | \"col-xs-6\" | \"col-xs-7\" | \"col-xs-8\" | \"col-xs-9\" | \"col-xs-10\" | \"col-xs-11\" | \"col-xs-12\" | \"col-sm-1\" | \"col-sm-2\" | \"col-sm-3\" | \"col-sm-4\" | \"col-sm-5\" | \"col-sm-6\" | \"col-sm-7\" | \"col-sm-8\" | \"col-sm-9\" | \"col-sm-10\" | \"col-sm-11\" | \"col-sm-12\" | \"col-md-1\" | \"col-md-2\" | \"col-md-3\" | \"col-md-4\" | \"col-md-5\" | \"col-md-6\" | \"col-md-7\" | \"col-md-8\" | \"col-md-9\" | \"col-md-10\" | \"col-md-11\" | \"col-md-12\" | \"col-lg-1\" | \"col-lg-2\" | \"col-lg-3\" | \"col-lg-4\" | \"col-lg-5\" | \"col-lg-6\" | \"col-lg-7\" | \"col-lg-8\" | \"col-lg-9\" | \"col-lg-10\" | \"col-lg-11\" | \"col-lg-12\" | \"col-xl-1\" | \"col-xl-2\" | \"col-xl-3\" | \"col-xl-4\" | \"col-xl-5\" | \"col-xl-6\" | \"col-xl-7\" | \"col-xl-8\" | \"col-xl-9\" | \"col-xl-10\" | \"col-xl-11\" | \"col-xl-12\"",
                "file": "projects/ksk/dynamic-form/src/lib/interface/column-size.type.ts",
                "description": "",
                "kind": 168
            },
            {
                "name": "OFFSET_SIZE_TYPE",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"offset-0\" | \"offset-1\" | \"offset-2\" | \"offset-3\" | \"offset-4\" | \"offset-5\" | \"offset-6\" | \"offset-7\" | \"offset-8\" | \"offset-9\" | \"offset-10\" | \"offset-11\" | \"offset-12\" | \"offset-xs-0\" | \"offset-xs-1\" | \"offset-xs-2\" | \"offset-xs-3\" | \"offset-xs-4\" | \"offset-xs-5\" | \"offset-xs-6\" | \"offset-xs-7\" | \"offset-xs-8\" | \"offset-xs-9\" | \"offset-xs-10\" | \"offset-xs-11\" | \"offset-xs-12\" | \"offset-sm-0\" | \"offset-sm-1\" | \"offset-sm-2\" | \"offset-sm-3\" | \"offset-sm-4\" | \"offset-sm-5\" | \"offset-sm-6\" | \"offset-sm-7\" | \"offset-sm-8\" | \"offset-sm-9\" | \"offset-sm-10\" | \"offset-sm-11\" | \"offset-sm-12\" | \"offset-md-0\" | \"offset-md-1\" | \"offset-md-2\" | \"offset-md-3\" | \"offset-md-4\" | \"offset-md-5\" | \"offset-md-6\" | \"offset-md-7\" | \"offset-md-8\" | \"offset-md-9\" | \"offset-md-10\" | \"offset-md-11\" | \"offset-md-12\" | \"offset-lg-0\" | \"offset-lg-1\" | \"offset-lg-2\" | \"offset-lg-3\" | \"offset-lg-4\" | \"offset-lg-5\" | \"offset-lg-6\" | \"offset-lg-7\" | \"offset-lg-8\" | \"offset-lg-9\" | \"offset-lg-10\" | \"offset-lg-11\" | \"offset-lg-12\" | \"offset-xl-0\" | \"offset-xl-1\" | \"offset-xl-2\" | \"offset-xl-3\" | \"offset-xl-4\" | \"offset-xl-5\" | \"offset-xl-6\" | \"offset-xl-7\" | \"offset-xl-8\" | \"offset-xl-9\" | \"offset-xl-10\" | \"offset-xl-11\" | \"offset-xl-12\"",
                "file": "projects/ksk/dynamic-form/src/lib/interface/offset-size.type.ts",
                "description": "",
                "kind": 168
            }
        ],
        "enumerations": [
            {
                "name": "FORM_CONTROLLER_TYPE",
                "childs": [
                    {
                        "name": "EMAIL",
                        "value": "email"
                    },
                    {
                        "name": "COLOR",
                        "value": "color"
                    },
                    {
                        "name": "DATE",
                        "value": "date"
                    },
                    {
                        "name": "DATETIME",
                        "value": "datetime"
                    },
                    {
                        "name": "MONTH",
                        "value": "month"
                    },
                    {
                        "name": "NUMBER",
                        "value": "number"
                    },
                    {
                        "name": "PASSWORD",
                        "value": "password"
                    },
                    {
                        "name": "SEARCH",
                        "value": "search"
                    },
                    {
                        "name": "TEL",
                        "value": "tel"
                    },
                    {
                        "name": "TEXT",
                        "value": "text"
                    },
                    {
                        "name": "TIME",
                        "value": "time"
                    },
                    {
                        "name": "URL",
                        "value": "url"
                    },
                    {
                        "name": "WEEK",
                        "value": "week"
                    },
                    {
                        "name": "SELECT",
                        "value": "select"
                    },
                    {
                        "name": "RADIO",
                        "value": "radio"
                    },
                    {
                        "name": "CHIPS",
                        "value": "chips"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "description": "",
                "file": "projects/ksk/dynamic-form/src/lib/interface/form-controller.enum.ts"
            }
        ],
        "groupedVariables": {
            "projects/ksk/dynamic-form/src/lib/dynamic-form.stories.ts": [
                {
                    "name": "ColorFormController",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ksk/dynamic-form/src/lib/dynamic-form.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\r\n  component: DynamicFormControllerComponent,\r\n  props: {\r\n    type: radios('type', FORM_CONTROLLER_TYPE, FORM_CONTROLLER_TYPE.COLOR),\r\n    label: text('label', 'label'),\r\n    columnSize: ['col-md-4'],\r\n    offsetSize: [ 'offset-md-4'],\r\n    name: text('name', ''),\r\n    placeholder: text('placeholder', 'Place Holder'),\r\n    disabled: boolean('disabled', false),\r\n    min: number('min', 0),\r\n    max: number('max', 0),\r\n    required: boolean('required', false),\r\n  },\r\n  template: `\r\n      <div class=\"row\">\r\n        <ksk-dynamic-form-controller [placeholder]=\"placeholder\" [max]=\"max\" [min]=\"min\" [required]=\"required\" [name]=\"name\" [disabled]=\"disabled\" [offsetSize]=\"offsetSize\" [columnSize]=\"columnSize\" [type]=\"type\" [label]=\"label\"></ksk-dynamic-form-controller>\r\n      </div>\r\n   `\r\n})"
                },
                {
                    "name": "DateFormController",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ksk/dynamic-form/src/lib/dynamic-form.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\r\n  component: DynamicFormControllerComponent,\r\n  props: {\r\n    type: radios('type', FORM_CONTROLLER_TYPE, FORM_CONTROLLER_TYPE.DATE),\r\n    label: text('label', 'label'),\r\n    columnSize: ['col-md-4'],\r\n    offsetSize: [ 'offset-md-4'],\r\n    name: text('name', ''),\r\n    placeholder: text('placeholder', 'Place Holder'),\r\n    disabled: boolean('disabled', false),\r\n    min: number('min', 0),\r\n    max: number('max', 0),\r\n    required: boolean('required', false),\r\n  },\r\n  template: `\r\n      <div class=\"row\">\r\n        <ksk-dynamic-form-controller [placeholder]=\"placeholder\" [max]=\"max\" [min]=\"min\" [required]=\"required\" [name]=\"name\" [disabled]=\"disabled\" [offsetSize]=\"offsetSize\" [columnSize]=\"columnSize\" [type]=\"type\" [label]=\"label\"></ksk-dynamic-form-controller>\r\n      </div>\r\n   `\r\n})"
                },
                {
                    "name": "DatetimeFormController",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ksk/dynamic-form/src/lib/dynamic-form.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\r\n  component: DynamicFormControllerComponent,\r\n  props: {\r\n    type: radios('type', FORM_CONTROLLER_TYPE, FORM_CONTROLLER_TYPE.DATETIME),\r\n    label: text('label', 'label'),\r\n    columnSize: ['col-md-4'],\r\n    offsetSize: [ 'offset-md-4'],\r\n    name: text('name', ''),\r\n    placeholder: text('placeholder', 'Place Holder'),\r\n    disabled: boolean('disabled', false),\r\n    min: number('min', 0),\r\n    max: number('max', 0),\r\n    required: boolean('required', false),\r\n  },\r\n  template: `\r\n      <div class=\"row\">\r\n        <ksk-dynamic-form-controller [placeholder]=\"placeholder\" [max]=\"max\" [min]=\"min\" [required]=\"required\" [name]=\"name\" [disabled]=\"disabled\" [offsetSize]=\"offsetSize\" [columnSize]=\"columnSize\" [type]=\"type\" [label]=\"label\"></ksk-dynamic-form-controller>\r\n      </div>\r\n   `\r\n})"
                },
                {
                    "name": "EmailFormController",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ksk/dynamic-form/src/lib/dynamic-form.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\r\n  component: DynamicFormControllerComponent,\r\n  props: {\r\n    type: radios('type', FORM_CONTROLLER_TYPE, FORM_CONTROLLER_TYPE.EMAIL),\r\n    label: text('label', 'label'),\r\n    columnSize: ['col-md-4'],\r\n    offsetSize: [ 'offset-md-4'],\r\n    name: text('name', ''),\r\n    placeholder: text('placeholder', 'Place Holder'),\r\n    disabled: boolean('disabled', false),\r\n    min: number('min', 0),\r\n    max: number('max', 10),\r\n    required: boolean('required', false),\r\n  },\r\n  template: `\r\n      <div class=\"row\">\r\n        <ksk-dynamic-form-controller [placeholder]=\"placeholder\" [max]=\"max\" [min]=\"min\" [required]=\"required\" [name]=\"name\" [disabled]=\"disabled\" [offsetSize]=\"offsetSize\" [columnSize]=\"columnSize\" [type]=\"type\" [label]=\"label\"></ksk-dynamic-form-controller>\r\n      </div>\r\n   `\r\n})"
                },
                {
                    "name": "MonthFormController",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ksk/dynamic-form/src/lib/dynamic-form.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\r\n  component: DynamicFormControllerComponent,\r\n  props: {\r\n    type: radios('type', FORM_CONTROLLER_TYPE, FORM_CONTROLLER_TYPE.MONTH),\r\n    label: text('label', 'label'),\r\n    columnSize: ['col-md-4'],\r\n    offsetSize: [ 'offset-md-4'],\r\n    name: text('name', ''),\r\n    placeholder: text('placeholder', 'Place Holder'),\r\n    disabled: boolean('disabled', false),\r\n    min: number('min', 0),\r\n    max: number('max', 0),\r\n    required: boolean('required', false),\r\n  },\r\n  template: `\r\n      <div class=\"row\">\r\n        <ksk-dynamic-form-controller [placeholder]=\"placeholder\" [max]=\"max\" [min]=\"min\" [required]=\"required\" [name]=\"name\" [disabled]=\"disabled\" [offsetSize]=\"offsetSize\" [columnSize]=\"columnSize\" [type]=\"type\" [label]=\"label\"></ksk-dynamic-form-controller>\r\n      </div>\r\n   `\r\n})"
                },
                {
                    "name": "NumberFormController",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ksk/dynamic-form/src/lib/dynamic-form.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\r\n  component: DynamicFormControllerComponent,\r\n  props: {\r\n    type: radios('type', FORM_CONTROLLER_TYPE, FORM_CONTROLLER_TYPE.NUMBER),\r\n    label: text('label', 'label'),\r\n    columnSize: ['col-md-4'],\r\n    offsetSize: [ 'offset-md-4'],\r\n    name: text('name', ''),\r\n    placeholder: text('placeholder', 'Place Holder'),\r\n    disabled: boolean('disabled', false),\r\n    min: number('min', 0),\r\n    max: number('max', 0),\r\n    required: boolean('required', false),\r\n  },\r\n  template: `\r\n      <div class=\"row\">\r\n        <ksk-dynamic-form-controller [placeholder]=\"placeholder\" [max]=\"max\" [min]=\"min\" [required]=\"required\" [name]=\"name\" [disabled]=\"disabled\" [offsetSize]=\"offsetSize\" [columnSize]=\"columnSize\" [type]=\"type\" [label]=\"label\"></ksk-dynamic-form-controller>\r\n      </div>\r\n   `\r\n})"
                },
                {
                    "name": "PasswordFormController",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ksk/dynamic-form/src/lib/dynamic-form.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\r\n  component: DynamicFormControllerComponent,\r\n  props: {\r\n    type: radios('type', FORM_CONTROLLER_TYPE, FORM_CONTROLLER_TYPE.PASSWORD),\r\n    label: text('label', 'label'),\r\n    columnSize: ['col-md-4'],\r\n    offsetSize: [ 'offset-md-4'],\r\n    name: text('name', ''),\r\n    placeholder: text('placeholder', 'Place Holder'),\r\n    disabled: boolean('disabled', false),\r\n    min: number('min', 0),\r\n    max: number('max', 0),\r\n    required: boolean('required', false),\r\n  },\r\n  template: `\r\n      <div class=\"row\">\r\n        <ksk-dynamic-form-controller [placeholder]=\"placeholder\" [max]=\"max\" [min]=\"min\" [required]=\"required\" [name]=\"name\" [disabled]=\"disabled\" [offsetSize]=\"offsetSize\" [columnSize]=\"columnSize\" [type]=\"type\" [label]=\"label\"></ksk-dynamic-form-controller>\r\n      </div>\r\n   `\r\n})"
                },
                {
                    "name": "SearchFormController",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ksk/dynamic-form/src/lib/dynamic-form.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\r\n  component: DynamicFormControllerComponent,\r\n  props: {\r\n    type: radios('type', FORM_CONTROLLER_TYPE, FORM_CONTROLLER_TYPE.SEARCH),\r\n    label: text('label', 'label'),\r\n    columnSize: ['col-md-4'],\r\n    offsetSize: [ 'offset-md-4'],\r\n    name: text('name', ''),\r\n    placeholder: text('placeholder', 'Place Holder'),\r\n    disabled: boolean('disabled', false),\r\n    min: number('min', 0),\r\n    max: number('max', 0),\r\n    required: boolean('required', false),\r\n  },\r\n  template: `\r\n      <div class=\"row\">\r\n        <ksk-dynamic-form-controller [placeholder]=\"placeholder\" [max]=\"max\" [min]=\"min\" [required]=\"required\" [name]=\"name\" [disabled]=\"disabled\" [offsetSize]=\"offsetSize\" [columnSize]=\"columnSize\" [type]=\"type\" [label]=\"label\"></ksk-dynamic-form-controller>\r\n      </div>\r\n   `\r\n})"
                },
                {
                    "name": "SelectFormController",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ksk/dynamic-form/src/lib/dynamic-form.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\r\n  component: DynamicFormControllerComponent,\r\n  props: {\r\n    type: radios('type', FORM_CONTROLLER_TYPE, FORM_CONTROLLER_TYPE.SELECT),\r\n    label: text('label', 'label'),\r\n    columnSize: ['col-md-4'],\r\n    offsetSize: [ 'offset-md-4'],\r\n    name: text('name', ''),\r\n    placeholder: text('placeholder', 'Place Holder'),\r\n    disabled: boolean('disabled', false),\r\n    min: number('min', 0),\r\n    max: number('max', 0),\r\n    required: boolean('required', false),\r\n    multiple: boolean('multiple', false),\r\n  },\r\n  template: `\r\n      <div class=\"row\">\r\n        <ksk-dynamic-form-controller [multiple]=\"multiple\" [placeholder]=\"placeholder\" [max]=\"max\" [min]=\"min\" [required]=\"required\" [name]=\"name\" [disabled]=\"disabled\" [offsetSize]=\"offsetSize\" [columnSize]=\"columnSize\" [type]=\"type\" [label]=\"label\"></ksk-dynamic-form-controller>\r\n      </div>\r\n   `\r\n})"
                },
                {
                    "name": "TelFormController",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ksk/dynamic-form/src/lib/dynamic-form.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\r\n  component: DynamicFormControllerComponent,\r\n  props: {\r\n    type: radios('type', FORM_CONTROLLER_TYPE, FORM_CONTROLLER_TYPE.TEL),\r\n    label: text('label', 'label'),\r\n    columnSize: ['col-md-4'],\r\n    offsetSize: [ 'offset-md-4'],\r\n    name: text('name', ''),\r\n    placeholder: text('placeholder', 'Place Holder'),\r\n    disabled: boolean('disabled', false),\r\n    min: number('min', 0),\r\n    max: number('max', 0),\r\n    required: boolean('required', false),\r\n  },\r\n  template: `\r\n      <div class=\"row\">\r\n        <ksk-dynamic-form-controller [placeholder]=\"placeholder\" [max]=\"max\" [min]=\"min\" [required]=\"required\" [name]=\"name\" [disabled]=\"disabled\" [offsetSize]=\"offsetSize\" [columnSize]=\"columnSize\" [type]=\"type\" [label]=\"label\"></ksk-dynamic-form-controller>\r\n      </div>\r\n   `\r\n})"
                },
                {
                    "name": "TextFormController",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ksk/dynamic-form/src/lib/dynamic-form.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\r\n  component: DynamicFormControllerComponent,\r\n  props: {\r\n    type: radios('type', FORM_CONTROLLER_TYPE, FORM_CONTROLLER_TYPE.TEXT),\r\n    label: text('label', 'label'),\r\n    columnSize: ['col-md-4'],\r\n    offsetSize: [ 'offset-md-4'],\r\n    name: text('name', ''),\r\n    placeholder: text('placeholder', 'Place Holder'),\r\n    disabled: boolean('disabled', false),\r\n    min: number('min', 0),\r\n    max: number('max', 0),\r\n    required: boolean('required', false),\r\n  },\r\n  template: `\r\n      <div class=\"row\">\r\n        <ksk-dynamic-form-controller [placeholder]=\"placeholder\" [max]=\"max\" [min]=\"min\" [required]=\"required\" [name]=\"name\" [disabled]=\"disabled\" [offsetSize]=\"offsetSize\" [columnSize]=\"columnSize\" [type]=\"type\" [label]=\"label\"></ksk-dynamic-form-controller>\r\n      </div>\r\n   `\r\n})"
                },
                {
                    "name": "TimeFormController",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ksk/dynamic-form/src/lib/dynamic-form.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\r\n  component: DynamicFormControllerComponent,\r\n  props: {\r\n    type: radios('type', FORM_CONTROLLER_TYPE, FORM_CONTROLLER_TYPE.TIME),\r\n    label: text('label', 'label'),\r\n    columnSize: ['col-md-4'],\r\n    offsetSize: [ 'offset-md-4'],\r\n    name: text('name', ''),\r\n    placeholder: text('placeholder', 'Place Holder'),\r\n    disabled: boolean('disabled', false),\r\n    min: number('min', 0),\r\n    max: number('max', 0),\r\n    required: boolean('required', false),\r\n  },\r\n  template: `\r\n      <div class=\"row\">\r\n        <ksk-dynamic-form-controller [placeholder]=\"placeholder\" [max]=\"max\" [min]=\"min\" [required]=\"required\" [name]=\"name\" [disabled]=\"disabled\" [offsetSize]=\"offsetSize\" [columnSize]=\"columnSize\" [type]=\"type\" [label]=\"label\"></ksk-dynamic-form-controller>\r\n      </div>\r\n   `\r\n})"
                },
                {
                    "name": "UrlFormController",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ksk/dynamic-form/src/lib/dynamic-form.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\r\n  component: DynamicFormControllerComponent,\r\n  props: {\r\n    type: radios('type', FORM_CONTROLLER_TYPE, FORM_CONTROLLER_TYPE.URL),\r\n    label: text('label', 'label'),\r\n    columnSize: ['col-md-4'],\r\n    offsetSize: [ 'offset-md-4'],\r\n    name: text('name', ''),\r\n    placeholder: text('placeholder', 'Place Holder'),\r\n    disabled: boolean('disabled', false),\r\n    min: number('min', 0),\r\n    max: number('max', 0),\r\n    required: boolean('required', false),\r\n  },\r\n  template: `\r\n      <div class=\"row\">\r\n        <ksk-dynamic-form-controller [placeholder]=\"placeholder\" [max]=\"max\" [min]=\"min\" [required]=\"required\" [name]=\"name\" [disabled]=\"disabled\" [offsetSize]=\"offsetSize\" [columnSize]=\"columnSize\" [type]=\"type\" [label]=\"label\"></ksk-dynamic-form-controller>\r\n      </div>\r\n   `\r\n})"
                },
                {
                    "name": "WeekFormController",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ksk/dynamic-form/src/lib/dynamic-form.stories.ts",
                    "type": "",
                    "defaultValue": "() => ({\r\n  component: DynamicFormControllerComponent,\r\n  props: {\r\n    type: radios('type', FORM_CONTROLLER_TYPE, FORM_CONTROLLER_TYPE.WEEK),\r\n    label: text('label', 'label'),\r\n    columnSize: ['col-md-4'],\r\n    offsetSize: [ 'offset-md-4'],\r\n    name: text('name', ''),\r\n    placeholder: text('placeholder', 'Place Holder'),\r\n    disabled: boolean('disabled', false),\r\n    min: number('min', 0),\r\n    max: number('max', 0),\r\n    required: boolean('required', false),\r\n  },\r\n  template: `\r\n      <div class=\"row\">\r\n        <ksk-dynamic-form-controller [placeholder]=\"placeholder\" [max]=\"max\" [min]=\"min\" [required]=\"required\" [name]=\"name\" [disabled]=\"disabled\" [offsetSize]=\"offsetSize\" [columnSize]=\"columnSize\" [type]=\"type\" [label]=\"label\"></ksk-dynamic-form-controller>\r\n      </div>\r\n   `\r\n})"
                }
            ],
            "projects/integration-testing/src/test.ts": [
                {
                    "name": "context",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/integration-testing/src/test.ts",
                    "type": "",
                    "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
                },
                {
                    "name": "require",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/integration-testing/src/test.ts",
                    "type": "literal type"
                }
            ],
            "projects/ksk/dynamic-form/src/test.ts": [
                {
                    "name": "context",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ksk/dynamic-form/src/test.ts",
                    "type": "",
                    "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
                },
                {
                    "name": "require",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ksk/dynamic-form/src/test.ts",
                    "type": "literal type"
                }
            ],
            "projects/integration-testing/src/environments/environment.prod.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/integration-testing/src/environments/environment.prod.ts",
                    "type": "object",
                    "defaultValue": "{\r\n  production: true\r\n}"
                }
            ],
            "projects/integration-testing/src/environments/environment.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/integration-testing/src/environments/environment.ts",
                    "type": "object",
                    "defaultValue": "{\r\n  production: false\r\n}"
                }
            ],
            "stories/Button.stories.ts": [
                {
                    "name": "Large",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/Button.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/Button.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Secondary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/Button.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Small",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/Button.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/Button.stories.ts",
                    "type": "Story<Button>",
                    "defaultValue": "(args: Button) => ({\r\n  component: Button,\r\n  props: args,\r\n})"
                }
            ],
            "stories/Header.stories.ts": [
                {
                    "name": "LoggedIn",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/Header.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "LoggedOut",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/Header.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/Header.stories.ts",
                    "type": "Story<Header>",
                    "defaultValue": "(args: Header) => ({\r\n  component: Header,\r\n  props: args,\r\n})"
                }
            ],
            "stories/Page.stories.ts": [
                {
                    "name": "LoggedIn",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/Page.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "LoggedOut",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/Page.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/Page.stories.ts",
                    "type": "Story<Page>",
                    "defaultValue": "(args: Page) => ({\r\n  component: Page,\r\n  props: args,\r\n})"
                }
            ]
        },
        "groupedFunctions": {
            "projects/ksk/dynamic-form/src/lib/interface/dynamic-form-controller.interface.ts": [
                {
                    "name": "getDynamicFormController",
                    "file": "projects/ksk/dynamic-form/src/lib/interface/dynamic-form-controller.interface.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "description": "",
                    "args": [
                        {
                            "name": "type"
                        },
                        {
                            "name": "label"
                        },
                        {
                            "name": "value",
                            "type": "any"
                        },
                        {
                            "name": "name"
                        },
                        {
                            "name": "placeholder"
                        },
                        {
                            "name": "props",
                            "type": "object"
                        },
                        {
                            "name": "columnSize"
                        },
                        {
                            "name": "offsetSize"
                        }
                    ],
                    "returnType": "DynamicFormControllerInterface",
                    "jsdoctags": [
                        {
                            "name": "type",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "label",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "value",
                            "type": "any",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "name",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "placeholder",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "props",
                            "type": "object",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "columnSize",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "offsetSize",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ]
        },
        "groupedEnumerations": {
            "projects/ksk/dynamic-form/src/lib/interface/form-controller.enum.ts": [
                {
                    "name": "FORM_CONTROLLER_TYPE",
                    "childs": [
                        {
                            "name": "EMAIL",
                            "value": "email"
                        },
                        {
                            "name": "COLOR",
                            "value": "color"
                        },
                        {
                            "name": "DATE",
                            "value": "date"
                        },
                        {
                            "name": "DATETIME",
                            "value": "datetime"
                        },
                        {
                            "name": "MONTH",
                            "value": "month"
                        },
                        {
                            "name": "NUMBER",
                            "value": "number"
                        },
                        {
                            "name": "PASSWORD",
                            "value": "password"
                        },
                        {
                            "name": "SEARCH",
                            "value": "search"
                        },
                        {
                            "name": "TEL",
                            "value": "tel"
                        },
                        {
                            "name": "TEXT",
                            "value": "text"
                        },
                        {
                            "name": "TIME",
                            "value": "time"
                        },
                        {
                            "name": "URL",
                            "value": "url"
                        },
                        {
                            "name": "WEEK",
                            "value": "week"
                        },
                        {
                            "name": "SELECT",
                            "value": "select"
                        },
                        {
                            "name": "RADIO",
                            "value": "radio"
                        },
                        {
                            "name": "CHIPS",
                            "value": "chips"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "description": "",
                    "file": "projects/ksk/dynamic-form/src/lib/interface/form-controller.enum.ts"
                }
            ]
        },
        "groupedTypeAliases": {
            "projects/ksk/dynamic-form/src/lib/interface/column-size.type.ts": [
                {
                    "name": "COLUMN_SIZE_TYPE",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"col-1\" | \"col-2\" | \"col-3\" | \"col-4\" | \"col-5\" | \"col-6\" | \"col-7\" | \"col-8\" | \"col-9\" | \"col-10\" | \"col-11\" | \"col-12\" | \"col-xs-1\" | \"col-xs-2\" | \"col-xs-3\" | \"col-xs-4\" | \"col-xs-5\" | \"col-xs-6\" | \"col-xs-7\" | \"col-xs-8\" | \"col-xs-9\" | \"col-xs-10\" | \"col-xs-11\" | \"col-xs-12\" | \"col-sm-1\" | \"col-sm-2\" | \"col-sm-3\" | \"col-sm-4\" | \"col-sm-5\" | \"col-sm-6\" | \"col-sm-7\" | \"col-sm-8\" | \"col-sm-9\" | \"col-sm-10\" | \"col-sm-11\" | \"col-sm-12\" | \"col-md-1\" | \"col-md-2\" | \"col-md-3\" | \"col-md-4\" | \"col-md-5\" | \"col-md-6\" | \"col-md-7\" | \"col-md-8\" | \"col-md-9\" | \"col-md-10\" | \"col-md-11\" | \"col-md-12\" | \"col-lg-1\" | \"col-lg-2\" | \"col-lg-3\" | \"col-lg-4\" | \"col-lg-5\" | \"col-lg-6\" | \"col-lg-7\" | \"col-lg-8\" | \"col-lg-9\" | \"col-lg-10\" | \"col-lg-11\" | \"col-lg-12\" | \"col-xl-1\" | \"col-xl-2\" | \"col-xl-3\" | \"col-xl-4\" | \"col-xl-5\" | \"col-xl-6\" | \"col-xl-7\" | \"col-xl-8\" | \"col-xl-9\" | \"col-xl-10\" | \"col-xl-11\" | \"col-xl-12\"",
                    "file": "projects/ksk/dynamic-form/src/lib/interface/column-size.type.ts",
                    "description": "",
                    "kind": 168
                }
            ],
            "projects/ksk/dynamic-form/src/lib/interface/offset-size.type.ts": [
                {
                    "name": "OFFSET_SIZE_TYPE",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"offset-0\" | \"offset-1\" | \"offset-2\" | \"offset-3\" | \"offset-4\" | \"offset-5\" | \"offset-6\" | \"offset-7\" | \"offset-8\" | \"offset-9\" | \"offset-10\" | \"offset-11\" | \"offset-12\" | \"offset-xs-0\" | \"offset-xs-1\" | \"offset-xs-2\" | \"offset-xs-3\" | \"offset-xs-4\" | \"offset-xs-5\" | \"offset-xs-6\" | \"offset-xs-7\" | \"offset-xs-8\" | \"offset-xs-9\" | \"offset-xs-10\" | \"offset-xs-11\" | \"offset-xs-12\" | \"offset-sm-0\" | \"offset-sm-1\" | \"offset-sm-2\" | \"offset-sm-3\" | \"offset-sm-4\" | \"offset-sm-5\" | \"offset-sm-6\" | \"offset-sm-7\" | \"offset-sm-8\" | \"offset-sm-9\" | \"offset-sm-10\" | \"offset-sm-11\" | \"offset-sm-12\" | \"offset-md-0\" | \"offset-md-1\" | \"offset-md-2\" | \"offset-md-3\" | \"offset-md-4\" | \"offset-md-5\" | \"offset-md-6\" | \"offset-md-7\" | \"offset-md-8\" | \"offset-md-9\" | \"offset-md-10\" | \"offset-md-11\" | \"offset-md-12\" | \"offset-lg-0\" | \"offset-lg-1\" | \"offset-lg-2\" | \"offset-lg-3\" | \"offset-lg-4\" | \"offset-lg-5\" | \"offset-lg-6\" | \"offset-lg-7\" | \"offset-lg-8\" | \"offset-lg-9\" | \"offset-lg-10\" | \"offset-lg-11\" | \"offset-lg-12\" | \"offset-xl-0\" | \"offset-xl-1\" | \"offset-xl-2\" | \"offset-xl-3\" | \"offset-xl-4\" | \"offset-xl-5\" | \"offset-xl-6\" | \"offset-xl-7\" | \"offset-xl-8\" | \"offset-xl-9\" | \"offset-xl-10\" | \"offset-xl-11\" | \"offset-xl-12\"",
                    "file": "projects/ksk/dynamic-form/src/lib/interface/offset-size.type.ts",
                    "description": "",
                    "kind": 168
                }
            ]
        }
    },
    "routes": {
        "name": "<root>",
        "kind": "module",
        "className": "AppModule",
        "children": [
            {
                "name": "routes",
                "filename": "projects/integration-testing/src/app/app-routing.module.ts",
                "module": "AppRoutingModule",
                "children": [],
                "kind": "module"
            }
        ]
    },
    "coverage": {
        "count": 2,
        "status": "low",
        "files": [
            {
                "filePath": "projects/integration-testing/src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "projects/integration-testing/src/environments/environment.prod.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/integration-testing/src/environments/environment.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/integration-testing/src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "context",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/integration-testing/src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "require",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ksk/dynamic-form/src/lib/dynamic-form-controller/dynamic-form-controller.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DynamicFormControllerComponent",
                "coveragePercent": 0,
                "coverageCount": "0/18",
                "status": "low"
            },
            {
                "filePath": "projects/ksk/dynamic-form/src/lib/dynamic-form.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ColorFormController",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ksk/dynamic-form/src/lib/dynamic-form.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DateFormController",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ksk/dynamic-form/src/lib/dynamic-form.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DatetimeFormController",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ksk/dynamic-form/src/lib/dynamic-form.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "EmailFormController",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ksk/dynamic-form/src/lib/dynamic-form.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "MonthFormController",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ksk/dynamic-form/src/lib/dynamic-form.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "NumberFormController",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ksk/dynamic-form/src/lib/dynamic-form.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "PasswordFormController",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ksk/dynamic-form/src/lib/dynamic-form.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SearchFormController",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ksk/dynamic-form/src/lib/dynamic-form.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SelectFormController",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ksk/dynamic-form/src/lib/dynamic-form.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "TelFormController",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ksk/dynamic-form/src/lib/dynamic-form.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "TextFormController",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ksk/dynamic-form/src/lib/dynamic-form.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "TimeFormController",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ksk/dynamic-form/src/lib/dynamic-form.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "UrlFormController",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ksk/dynamic-form/src/lib/dynamic-form.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WeekFormController",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ksk/dynamic-form/src/lib/dynamic-form/dynamic-form.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DynamicFormComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "projects/ksk/dynamic-form/src/lib/interface/dynamic-form-controller.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "DynamicFormControllerInterface",
                "coveragePercent": 0,
                "coverageCount": "0/24",
                "status": "low"
            },
            {
                "filePath": "projects/ksk/dynamic-form/src/lib/interface/dynamic-form-controller.interface.ts",
                "type": "function",
                "linksubtype": "function",
                "name": "getDynamicFormController",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ksk/dynamic-form/src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "context",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ksk/dynamic-form/src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "require",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Large",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Secondary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Small",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/Header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedIn",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/Header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedOut",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/Header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/Page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedIn",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/Page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedOut",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/Page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonComponent",
                "coveragePercent": 83,
                "coverageCount": "5/6",
                "status": "very-good"
            },
            {
                "filePath": "stories/header.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HeaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "stories/page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            }
        ]
    }
}